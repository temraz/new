FORMAT: 1A
HOST: https://api.classera.com/

# Classera

Classera API allows you to connect your website or application with Classera to provide single sign-on, read/update user information and content, etc.

The API attempts to conform to the RESTful design principles. You interact with the resources exposed via the API by accessing resource collection and element URIs using the HTTP verbs (GET, POST, PUT, and DELETE). 
Classera REST APIs provides programmatic access to read and write Classera data, such as (User info, courses, lectures, learning objects, etc.). 
Classera REST API identifies applications and users using OAuth2.
Classera returns JSON data via its RESTful API.

#OAuth
Use our OAuth endpoints to connect users to classera and send secure, authorized requests to the classera API.

#REST APIs
The REST APIs provides programmatic access to read and write classera data.read users courses and lectures, and more. The REST API identifies classera applications and users using OAuth2; responses are available in JSON.

## Group Users

Resources related to users in the API.

## Users Login [/users/users_login?access_token=your_access_token]

### Login [POST]

This action allows your website to login directly to classera system from your website.

+ username (string) - The username, login name, email, national ID
+ password (string) - password.

+ Request (application/json)

        {
            "username": "username",
            "password": "password"
        }


        
+ Response 200 (application/json)

        {"0":"https:\/\/me.classera.com\/users\/api_auth_login\/5fcfd17dd69de6527882650daccc4f03","1":{"User":{"id":"78785","username":"etss0001","role_id":"6"}},"status":"true","auth_token":"43b29ce52639ea06c991d0c6b86170c1"}
       
## Logout   [/Users/logout?Authtoken=ebe49b73134fd0c1844dff2b30a43a81 &access_token=your_access_token]

+ Parameters :
    + Authtoken: "ebe49b73134fd0c1844dff2b30a43a81" (required, text) - Authtoken for user 
    
### Logout  [POST]
This action allows to logout from application   .

+ Authtoken: (text) - Authtoken

+ Response 200 (application/json)
        
        {"message": "Logged out" }         
   
## Create Users [/users/create_user?access_token=your_access_token]

### Create User [POST]

This action allows you to create student, teacher and guardian account to classera system from your website.

Notice level_id is required only when role id = 6 (student)

+ username (string, required) - if username didn't set it will be generate automatically 
+ school_id (int, required) - school_id 
+ level_id (int, required only if user is student) - level_id 
+ role_id (int, required) - role_id "Parents" => 3, "Teachers" => 4 , "Students" => 6 , "Accountants" => 7, "Managers" => 8, "Advisers" => 9, "Financial Administrators" => 10, "Teacher Supervisors" => 11, "Floor Supervisors" => 12, "Kagan Coaches" => 13
+ number (string, required) - number = government_id 
+ password (string, required) - if password didn't set it will be generate automatically
+ first_name (string, required) - first_name 
+ father_name (string) - father_name 
+ grandfather_name (string) - grandfather_name 
+ family_name (string, required) - family_name 
+ address (string) - address 
+ phone_number (string) - phone_number 
+ mobile_number (string) - mobile_number 
+ email (string) - email 
+ place_of_birth (int) - place_of_birth 
+ date_of_birth (date) - date_of_birth YYYY-MM-DD 
+ guardian_user_id (int) - required only if role is student (6) and you want to link student with parent account  (Parents)
+ mother_mobile (string) 
+ student_user_id (int) - required only if role_id is guardian (3) and you want to link parent with student account (Parents)
+ login_name (string) - login_name
+ gender intger [1=> male, 2=> female]
+ arabic_name (string) 


+ Response 200 (application/json)

        {"message":"user has been saved","id":12340} 

## Pioneer create User [/users/pioneer_create_user?access_token=your_access_token]

### Pioneer Create User [POST]

This action allows you to create student, teacher and guardian account to classera system from your website.

Notice-1: level_id is required only when role id = 6 (student)

Notice-2: student_pioneer_id is required only when role id = 3 (Parent)

Notice-3: student_government_id is required only when role id = 3 (Parent)


+ pioneer_id (string, integr required) - pioneer_id
+ government_id (string, integr required) - government_id
+ school_pioneer_id (string, integr required) - school_pioneer_id 
+ level_pioneer_id (string, integr required) - level_pioneer_id 
+ stage_pioneer_id (string, integr required) - stage_pioneer_id 
+ nationality_pioneer_id (string) - nationality_pioneer_id

+ role_id (int, required) - role_id "Parents" => 3, "Teachers" => 4 , "Students" => 6 , "Accountants" => 7, "Managers" => 8, "Advisers" => 9, "Financial Administrators" => 10, "Teacher Supervisors" => 11, "Floor Supervisors" => 12, "Kagan Coaches" => 13
+ password (string, required) - password 
+ first_name (string, required) - first_name 
+ father_name (string) - father_name 
+ grandfather_name (string) - grandfather_name 
+ family_name (string, required) - family_name 
+ address (string) - address 
+ phone_number (int) - phone_number 
+ mobile_number (int) - mobile_number 
+ email (string) - email 
+ place_of_birth (string) - place_of_birth 
+ date_of_birth (date) - date_of_birth YYYY-MM-DD 

+ student_pioneer_id (string, integr require only if role_id = 3 parent) - student_pioneer_id
+ student_government_id (integr require only if role_id = 3 parent) - student_government_id

+ Response 200 (application/json)

        {"message":"user has been saved"}

## Edit Users [/users/edit_user?access_token=your_access_token]

### Edit User [POST]

This action allows you to edit student, teacher and guardian account to classera system from your website.

+ id (string, required) - user ID 
+ first_name (string, required) - first_name 
+ father_name (string) - father_name 
+ grandfather_name (string) - grandfather_name 
+ family_name (string, required) - family_name 
+ address (string) - address 
+ phone_number (int) - phone_number 
+ mobile_number (int) - mobile_number 
+ email (string) - email 
+ place_of_birth (string) - place_of_birth 
+ date_of_birth (date) - date_of_birth YYYY-MM-DD 
+ status_id (int) - [1 => active, 2 => withdrawn]

if you want to transfer student from school to another you have to pass this paramters 

+ school_id (int) - new school id
+ level_id (int) - new level id

+ Response 200 (application/json)

        {"message":"user has been saved"}  
        
## Pioneer Edit Users [/users/pioneer_edit_user?access_token=your_access_token]

### Pioneer Edit User [POST]

This action allows you to edit student, teacher and guardian account to classera system from your website.

+ user_pioneer_id (string, required) - User Pioneer ID 
+ government_id (string, required) - government ID 
+ new_government_id (string, required only if you want to change the user government ID) - New government ID
+ school_pioneer_id (string, required) - school_id 
+ first_name (string, required) - first_name 
+ father_name (string) - father_name 
+ grandfather_name (string) - grandfather_name 
+ family_name (string, required) - family_name 
+ address (string) - address 
+ phone_number (int) - phone_number 
+ mobile_number (int) - mobile_number 
+ email (string) - email 
+ place_of_birth (string) - place_of_birth 
+ date_of_birth (date) - date_of_birth YYYY-MM-DD 
+ status_id (int) - [1 => active, 2 => withdrawn]

if you want to transfer student from school to another you have to pass this paramters 

+ school_pioneer_id (int) - new school id
+ stage_pioneer_id (int) - new stage id
+ level_pioneer_id (int) - new level id



+ Response 200 (application/json)

        {"message":"user has been saved"}  
        
        
## number of visits for each role [/users/visits_for_each_role?school_id=16&date_from=2014-10-12&date_to=2015-8-26&access_token=your_access_token]

### Visits for each role [GET]

This action allows you to get number of visits for every role in the school.
+ school_id (int) - school id 
+ date_from (date) - year-month-day
+ date_to (date) - year-month-day

        
+ Response 200 (application/json)

        [{"students":4,"teachers":4,"parents":2,"supervisors":1,"kaganCoaches":1,"advisers":1,"managers":1,"Admins":2}]
        
        
## Online visitors right now [/users/online_right_now?admin_user_id=694268&access_token=your_access_token]

### Online visitors right now [GET]

This action allows you to get number of all users online right now in your schools.

+ admin_user_id (int) - admin user id 
        
+ Response 200 (application/json)

        [{"total_online":2435}]
        
## Get user schools list [/users/get_schools_list?user_id=694268&access_token=your_access_token]

### get user schools list [GET]

This action allows you to get schools list that belong to the user.

+ user_id (int) - user id 
        
+ Response 200 (application/json)

        [{"School":{"id":"16","name":"FD Test School"}},{"School":{"id":"21","name":"\u0645\u062f\u0627\u0631\u0633 \u0627\u0644\u0623\u0646\u062f\u0644\u0633 \u0627\u0644\u0623\u0647\u0644\u064a\u0629"}},{"School":{"id":"22","name":"\u0645\u062c\u0645\u0639 \u0627\u0644\u0623\u0645\u064a\u0631 \u0633\u0644\u0637\u0627\u0646 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a"}}]
        
## Get user info by mawhiba id [/users/get_user_info_by_mawhiba_id?mawhiba_id=694268&access_token=your_access_token]

### get user info by mawhiba id [GET]

This action allows you to get user info by his mawhiba id.

+ mawhiba_id (int) - mawhiba id 
        
+ Response 200 (application/json)

        {"id":"87783","mawhiba_id":"12","pioneer_id":"0","username":"fdtstg1954","notification_settings":"1023","created":"2014-10-15 21:07:11","modified":"2014-10-15 21:07:11","role_id":"3","school_id":"16","first_name":"\u0623\u0645 \u0639\u0628\u062f\u0627\u0644\u0645\u0644\u0643","father_name":"\u0645\u0646\u0635\u0648\u0631","grandfather_name":null,"family_name":"\u0627\u0644\u0645\u0646\u0635\u0648\u0631","name_ara":null,"date_of_birth":null,"place_of_birth_country":null,"place_of_birth":null,"address":null,"phone_number":null,"mobile_number":null,"email":null,"verified_email":false,"nationality_id":"1","dob_hijri":null,"photo_filename":null,"theme_id":"1","deleted":false,"status_id":"1","lang":null,"date_format":"0","login_name":null,"google_login_token":null,"block_reports":false,"number":null,"old_school_id":null,"gender":"0","bio":null,"facebook_account":null,"twitter_account":null,"google_plus_account":null,"instagram_account":null,"linkedin_account":null,"full_name":"\u0623\u0645 \u0639\u0628\u062f\u0627\u0644\u0645\u0644\u0643 \u0645\u0646\u0635\u0648\u0631 \u0627\u0644\u0645\u0646\u0635\u0648\u0631"}
        
                
## Get user info [/users/get_user_info?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### get user info [GET]
This action allows to get all user data

+ user_id (int) - user_id


+ Response 200 (application/json)

        {"id":"10386","nationality_id":"1","mawhiba_id":"222","username":"fdtstadmin","notification_settings":"1023","created":null,"modified":"2015-05-19 13:24:22","role_id":"2","school_id":"16","first_name":"FD","father_name":null,"grandfather_name":null,"family_name":"TST","name_ara":null,"date_of_birth":"2014-04-21","place_of_birth":"","address":"","phone_number":"","mobile_number":"","email":"","verified_email":false,"dob_hijri":null,"photo_filename":"images (155).jpg","theme_id":"1","deleted":false,"status_id":"1","lang":"eng","date_format":"0","login_name":"","block_reports":false,"number":null,"old_school_id":null,"gender":"0"}

## Get User School ID [/users/get_school_id?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### Get User School ID [GET]

This action allows to get user school_id

+ user_id (int) - user_id

+ Response 200 (application/json)

        {"school_id":"10386"}
        
## Get current year & semester  [/users/get_current_semester_id?user_id=12&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### Get semster and year id [GET]

This action allows to get user current semster_id and year_id

+ user_id (int) - user_id

+ Response 200 (application/json)

        {"year_id":"35","semester_id":"32"}
 
## Get student services  [/users/get_student_services?user_id=78785&year_id=224&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + year_id: 100 (optional, number) - year Id integer
    
### Get Student Services [GET]

This action allows to get all student services in a specific semester 

+ user_id (int) - user_id
+ year_id (int) - year_id

+ Response 200 (application/json)

        [{"Service":{"id":"1","title":"\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644\u062a\u0644\u0645\u0630\u0629"},"ServiceStatus":{"status":"0"}}]
                
## Get user assignments [/users/get_assignments?user_id=10436&year_id=35&lecture_id=938&access_token=&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID of the user in form of an integer
    + lecture_id: 100 (optional, number) - Lecture Id of the user in form of an integer
    + year_id: 100 (required, number) - year Id of the user in form of an integer

### Get User assignments [GET]

This action allows to get users assignments in a specific semester 

+ user_id (int) - user_id
+ year_id (int) - year_id
+ lecture_id (int) - lecture_id
+ type (string) - type
+ solved (boolean) - type

+ Response 200 (application/json)

        [{"Assignment":{"id":"56140","title":"arabic final exam","type":"Exam","mark":"100","time_limit":"10","due_datetime":"2014-12-04 15:29:00","cutoff_datetime":"2014-12-04 15:29:00","status":"draft","publishing_datetime":"2014-12-01 15:44:00","comments":"","accept_submission_attachment":false,"created":"2014-12-01 15:30:17","modified":"2014-12-01 15:31:40","attachment_id":null,"sub_attach_mark":null,"private":false,"deleted":false,"view_answers":false,"new":"true","allow_multiple_submissions":false,"random_questions":false,"random_answers":false,"assignment_password":null,"user_id":"10564","semester_id":"32","grade_category_id":null,"preparation_id":"3","assessment_id":null}},{"Assignment":{"id":"56170","title":"Math2 exam","type":"Exam","mark":"100","time_limit":"12","due_datetime":"2015-04-09 15:16:00","cutoff_datetime":"2015-04-09 15:16:00","status":"draft","publishing_datetime":"2015-04-06 15:31:00","comments":"","accept_submission_attachment":false,"created":"2015-04-06 15:16:59","modified":"2015-04-06 15:16:59","attachment_id":null,"sub_attach_mark":null,"private":false,"deleted":false,"view_answers":false,"new":"true","allow_multiple_submissions":false,"random_questions":false,"random_answers":false,"assignment_password":null,"user_id":"10440","semester_id":"32","grade_category_id":null,"preparation_id":null,"assessment_id":null}}]
           
## Get user Assignments/Exam mark [/users/get_student_exam_mark?user_id=12&assignment_id=121&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID of the user in form of an integer
    + assignment_id: 100 (required, number) - Assignment Id for the user in form of an integer
  


### Get User assignments/Exam mark [GET]

This action allows to get student exam mark 

+ user_id (int) - user_id
+ assignment (int) - assignment_id


+ Response 200 (application/json)

        [{"Assignment":{"full_mark":"20"},"Submission":{"mark":"20","id":"1351427"}}]
           
## Get student level  [/users/get_student_level?user_id=12&year_id=12&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + year_id: 100 (required, number) - Year ID in form of an integer


### Get Student level [GET]

This action allows to get student level in specific year

+ user_id (int) - user_id
+ year_id (int) - user_id

+ Response 200 (application/json)

        {"id":"2603","student_id":"3126","year_id":"35","level_id":"212","status":null,"created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00"}
        

## Get user score info  [/users/get_user_score_info?user_id=12&semester_id=12&access_token=your_access_token]

+ Parameters : 
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + semester_id: 100 (required, number) - Year ID in form of an integer


### Get User Score info [GET]

This action allows to get student level in specific year

+ user_id (int) - user_id
+ semester_id (int) - semester_id

+ Response 200 (application/json)

        {"user_score":"1200","current_card_title":"Green","current_card_color":"#afd136","user_ratio":33.3333333333,"class_index":4,"class_title":"Green","class_color":"#afd136"}
        

## Get Users Top Scores [/users/get_users_top_scores?access_token=your_access_token&role_id=6&all_schools=1&limit=3&user_id=31&lang=ara]

### Get Users Top Scores [GET]

This action allows you to get top scores of students or teachers.

+ user_id (string, required) - user ID 
+ role_id (int, required) - role ID of the targeted users (students or teachers) 
+ all_schools (string, required) - include all schools ( 0 or 1)
+ limit (int, required) - number of results
+ lang  (string, required) - allow arabic language if found

+ Response 200 (application/json)

        
        {
            "ScoresDetailsView": {
                "user_id": "39",
                "username": "clss0019",
                "score": "3000",
                "semester_id": "1",
                "full_name": "Abody yousef ashour Kash",
                "full_name_ara": "عبدالرحمن قشقري"
            },
            "School": {
                "name": "Classera"
            }
        },
        {
            "ScoresDetailsView": {
                "user_id": "33",
                "username": "clss0012",
                "score": "2000",
                "semester_id": "1",
                "full_name": "Medo Justin",
                "full_name_ara": null
            },
            "School": {
                "name": "Classera"
            }
        },
        {
            "ScoresDetailsView": {
                "user_id": "34",
                "username": "clss0011",
                "score": "1000",
                "semester_id": "1",
                "full_name": "mohammed jamal aziz janbi",
                "full_name_ara": "محمد جمال عبدالعزيز جنبي"
            },
            "School": {
                "name": "Classera"
            }
        }
        
## Get Student Reports List  [/users/get_student_reports_list?user_id=100&access_token=your_access_token]

+ Parameters :
   + user_id: 100 (required, number) - User ID  in form of an integer

### Get Student Reports List [GET]

This action allows to get student report list

+ user_id (int) - user_id


+ Response 200 (application/json)

        [{"ReportCards":{"id":"754","title":"Layla Report","created":"2016-05-23 10:28:31"}}]

## Get student report [/users/get_student_report?user_id=12&report_id=12&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
    + report_id: 100 (required, number) - Report ID in form of an integer
    

### Get Student Report [GET]

This action allows to get students reports details

+ user_id (int) - user_id
+ report_id (int) - report_id

+ Response 200 (application/json)
        
        {"report":[{"ReportCards":{"title":"Layla Report"}}],"lectures":[{"lecture_id":"323274","course_id":"48918","course_title":"\u062f\u0648\u0631\u0629 \u0627\u0644\u0631\u0648\u0628\u0648\u062a","excused":0,"unexcused":0,"transcript_attribute":[{"grade":0,"point":"100","transcript_attribute_id":"209","transcript_attribute_title":"Mid-Term Exam"},{"grade":0,"point":"0","transcript_attribute_id":"208","transcript_attribute_title":"Exams Average"},{"grade":0,"point":"100","transcript_attribute_id":"516","transcript_attribute_title":"\u0645\u0634\u0631\u0648\u0639 \u0627\u0644\u0645\u0627\u062f\u0629"},{"grade":0,"point":"100","transcript_attribute_id":"886","transcript_attribute_title":"Total"}]},{"lecture_id":"287253","course_id":"41259","course_title":"\u062f\u0648\u0631\u0629 \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0634\u0627\u0631\u064a\u0639","excused":0,"unexcused":0,"transcript_attribute":[{"grade":0,"point":"100","transcript_attribute_id":"209","transcript_attribute_title":"Mid-Term Exam"},{"grade":0,"point":"0","transcript_attribute_id":"208","transcript_attribute_title":"Exams Average"},{"grade":0,"point":"100","transcript_attribute_id":"516","transcript_attribute_title":"\u0645\u0634\u0631\u0648\u0639 \u0627\u0644\u0645\u0627\u062f\u0629"},{"grade":0,"point":"100","transcript_attribute_id":"886","transcript_attribute_title":"Total"}]},{"lecture_id":"30445","course_id":"7127","course_title":"Math-101","excused":0,"unexcused":0,"transcript_attribute":[{"grade":100,"point":"100","transcript_attribute_id":"209","transcript_attribute_title":"Mid-Term Exam"},{"grade":0,"point":"100","transcript_attribute_id":"516","transcript_attribute_title":"\u0645\u0634\u0631\u0648\u0639 \u0627\u0644\u0645\u0627\u062f\u0629"},{"grade":0,"point":"0","transcript_attribute_id":"208","transcript_attribute_title":"Exams Average"},{"grade":100,"point":"100","transcript_attribute_id":"886","transcript_attribute_title":"Total"}]},{"lecture_id":"30449","course_id":"7129","course_title":"English-101","excused":0,"unexcused":0,"transcript_attribute":[{"grade":0,"point":"100","transcript_attribute_id":"209","transcript_attribute_title":"Mid-Term Exam"},{"grade":0,"point":"100","transcript_attribute_id":"516","transcript_attribute_title":"\u0645\u0634\u0631\u0648\u0639 \u0627\u0644\u0645\u0627\u062f\u0629"},{"grade":0,"point":"0","transcript_attribute_id":"208","transcript_attribute_title":"Exams Average"},{"grade":0,"point":"100","transcript_attribute_id":"886","transcript_attribute_title":"Total"}]},{"lecture_id":"908613","course_id":"53191","course_title":"\u062f\u0648\u0631\u0629 \u0645\u0647\u0627\u0631\u062a \u0627\u062a\u0635\u0627\u0644","excused":0,"unexcused":0,"transcript_attribute":[{"grade":0,"point":"100","transcript_attribute_id":"209","transcript_attribute_title":"Mid-Term Exam"},{"grade":0,"point":"0","transcript_attribute_id":"208","transcript_attribute_title":"Exams Average"},{"grade":0,"point":"100","transcript_attribute_id":"516","transcript_attribute_title":"\u0645\u0634\u0631\u0648\u0639 \u0627\u0644\u0645\u0627\u062f\u0629"},{"grade":0,"point":"100","transcript_attribute_id":"886","transcript_attribute_title":"Total"}]}],"StudentBehavior":[{"StudentBehavior":{"id":"28310","date":"2016-05-25","details":"Test attachment 1","attachment_id":"3145697","behavior_title":"\u0639\u062f\u0645 \u0627\u0644\u062a\u0642\u064a\u062f \u0628\u0627\u0644\u0644\u0628\u0627\u0633 \u0627\u0644\u0631\u0633\u0645\u064a \u0627\u0644\u062e\u0627\u0635 \u0628\u0627\u0644\u0645\u062f\u0631\u0633\u0629 ","behavior_description":"\r\n\t\u0639\u062f\u0645 \u0627\u0644\u062a\u0642\u064a\u062f \u0628\u0627\u0644\u0644\u0628\u0627\u0633 \u0627\u0644\u0631\u0633\u0645\u064a \u0627\u0644\u062e\u0627\u0635 \u0628\u0627\u0644\u0645\u062f\u0631\u0633\u0629  \u0623\u0648 \u0647\u064a\u0626\u0629 \u0645\u062e\u0627\u0644\u0641\u0629 \u0644\u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0645\u062f\u0631\u0633\u064a <\/p>\r\n","behavior_points":"1","action_title":"1- \u0627\u0644\u062a\u0646\u0628\u064a\u0647 \u0627\u0644\u0634\u0641\u0648\u064a ","action_description":"\r\n\t\u0627\u0644\u062a\u0646\u0628\u064a\u0647 \u0627\u0644\u0634\u0641\u0648\u064a \u0627\u0644\u0625\u0646\u0641\u0631\u0627\u062f\u064a \u0645\u0646 \u0627\u0644\u0645\u0639\u0644\u0645 \u0623\u0648 \u0627\u0644\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u062f\u0631\u0633\u064a\u0629 \u0639\u0646\u062f\u0645\u0628\u0627\u0634\u0631\u0629 \u0627\u0644\u0645\u0648\u0642\u0641 \u0648\u0628\u0623\u0633\u0644\u0648\u0628 \u062a\u0631\u0628\u0648\u064a \u062d\u0643\u064a\u0645 \u0648\u062a\u0639\u0632\u064a\u0632 \u0627\u0644\u0633\u0644\u0648\u0643 \u0627\u0644\u0625\u064a\u062c\u0627\u0628\u064a .<\/p>\r\n","attachment_url":{"download_url":"https:\/\/s3.amazonaws.com\/classera\/111\/behavior\/3145697.docx?response-content-disposition=attachment%3Bfilename%3D%22_%C3%98%C2%A7%C3%99%C2%84%C3%98%C2%AD%C3%99%C2%81%C3%98%C2%B1_%C3%98%C2%A7%C3%99%C2%84%C3%98%C2%B4%C3%98%C2%B1%C3%99%C2%82%C3%99%C2%8A_%C3%98%C2%B9%C3%99%C2%84%C3%99%C2%89_%C3%98%C2%A7%C3%99%C2%84%C3%98%C2%AE%C3%98%C2%B4%C3%98%C2%A8.docx%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468928252&Signature=1A7mNId95GWclmid149Hrld87tY%3D"}}},{"StudentBehavior":{"id":"28311","date":"2016-05-25","details":"Test attachment 2","attachment_id":"3145698","behavior_title":"\u0627\u0644\u0639\u0628\u062b \u0641\u064a \u0627\u0644\u0635\u0641 \u0628\u0627\u0644\u0637\u0627\u0628\u0648\u0631","behavior_description":"\r\n\t\u0635\u062b\u0633\u0628\u0633\u064a\u0628<\/p>\r\n","behavior_points":"1","action_title":"\u062a\u062d\u0630\u064a\u0631","action_description":"\u0633\u0628\u0633","attachment_url":{"download_url":"https:\/\/s3.amazonaws.com\/classera\/111\/behavior\/3145698.docx?response-content-disposition=attachment%3Bfilename%3D%22_%C3%98%C2%A7%C3%99%C2%84%C3%98%C2%AD%C3%99%C2%81%C3%98%C2%B1_%C3%98%C2%A7%C3%99%C2%84%C3%98%C2%B4%C3%98%C2%B1%C3%99%C2%82%C3%99%C2%8A_%C3%98%C2%B9%C3%99%C2%84%C3%99%C2%89_%C3%98%C2%A7%C3%99%C2%84%C3%98%C2%AE%C3%98%C2%B4%C3%98%C2%A8.docx%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468928253&Signature=CVVGoH0L1ntB5yDHGk3ZLSP%2BECM%3D"}}}]}

## Get Inbox Messages [/users/get_inbox_messages?user_id=12&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
   
### Get Inbox Messages [GET]

This action allows to get user Inbox messages

+ user_id (int) - user_id


+ Response 200 (application/json)

        [{"0":[{"InboxView":{"id":"9094211_78785","sender_id":"78934","full_name":"Tom Friedman","full_name_ara":null,"semester_id":"318","message_id":"9094211","title":"hi","body":"hhhhh","priority":"0","created":"2016-07-17 16:58:27","type":null,"read":false,"image_url":"https:\/\/s3.amazonaws.com\/classera\/111\/profilepic\/thumb_130\/78934.jpg?response-content-disposition=attachment%3Bfilename%3D%2293105f8e5b940e2b2ed489ffae17da2d.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468921559&Signature=gRteGqcBjLmV0zU%2FqGRe3iCT5V0%3D"}}],"tota_count":37,"unread_count":1}

## Search Inbox Messages [/users/search_inbox_messages?user_id=12&sender=Tom&subject=hi&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
    + sender : Tom (optional, string) - Sendre name
    + subject : hi (optional, string) - Subject title message 
###Search Inbox Messages [GET]

This action allows to user search in Inbox messages by sender name or by title of message

+ user_id (int) - user_id
+ sender (string) - sender
+ subject (string) - subject

+ Response 200 (application/json)

        [{"id":"9094211_78785","sender_id":"78934","full_name":"Tom Friedman","full_name_ara":null,"semester_id":"318","message_id":"9094211","title":"hi","body":"hhhhh","priority":"0","created":"2016-07-17 16:58:27","type":null,"read":false,"image_url":"https:\/\/s3.amazonaws.com\/classera\/111\/profilepic\/thumb_130\/78934.jpg?response-content-disposition=attachment%3Bfilename%3D%2293105f8e5b940e2b2ed489ffae17da2d.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468921559&Signature=gRteGqcBjLmV0zU%2FqGRe3iCT5V0%3D"}]


## Get message inbox details [/Users/get_message_inbox_details?message_id=10&access_token=your_access_token]

+ Parameters : 
    + message_id: 10 (required, number) - ID of message
    

### Get message inbox details [GET]
This action allows to get message inbox details .

+ message_id (int) - message_id

+ Response 200 (application/json)

        [{"Message":{"id":"9094211","title":"hi","body":"hhhhh","created":"2016-07-17 16:58:27","priority":"0","type":null,"sender_id":"78934","semester_id":"318","read":false,"first_name":"Tom","family_name":"Friedman","image_url":"https:\/\/s3.amazonaws.com\/classera\/111\/profilepic\/thumb_130\/78934.jpg?response-content-disposition=attachment%3Bfilename%3D%2293105f8e5b940e2b2ed489ffae17da2d.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468926155&Signature=EwFv4%2B4x8zxvR83%2BaGqHE3Tbn7I%3D"}}]

## Get Outbox Messages [/users/get_outbox_messages?user_id=12&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
    

### Get Outbox Messages [GET]

This action allows to get user outbox messages

+ user_id (int) - user_id

+ Response 200 (application/json)

        [{"inboxView":{"id":"33_10436","message_id":"33","recipient_id":"10436","sender_id":"10386","sender_photo":"images (155).jpg","full_name":"FD TST","full_name_ara":null,"title":"\u0631\u0633\u0627\u0644\u0629 \u0644\u0643\u0645 \u062e\u0627\u0635\u0629 \u0645\u062d\u0641\u0648\u0638\u0629","body":"
        \r\n\t\u062a\u064a\u0633\u062a \u0628\u0633\u0645 \u0627\u0644\u0644\u0647<\/p>\r\n","priority":"0","created":"2014-11-30 18:45:33","type":null,"read":false,"has_attachment":"0","school_id":"16","semester_id":"32"},"Message":{"id":"33","title":"\u0631\u0633\u0627\u0644\u0629 \u0644\u0643\u0645 \u062e\u0627\u0635\u0629 \u0645\u062d\u0641\u0648\u0638\u0629","body":"

        \r\n\t\u062a\u064a\u0633\u062a \u0628\u0633\u0645 \u0627\u0644\u0644\u0647<\/p>\r\n","approved":true,"sent":null,"created":"2014-11-30 18:45:33","modified":"2014-11-30 18:45:33","sender_id":"10386","reply_to":null,"attachment_id":null,"priority":"0","deleted":"0","type":null,"semester_id":"32","related_to":null,"related_to_type":null,"is_draft":false},"Recipient":{"id":"10436","nationality_id":"1","mawhiba_id":null,"username":"fdtsts0003","password":"45e068b5c30decd5883ff5bfa4aa20f74c6e392e","notification_settings":"0","created":"2011-12-31 13:02:40","modified":"2015-06-04 16:18:41","role_id":"6","school_id":"16","first_name":"\u0645\u062d\u0645\u062f","father_name":"\u0633\u0639\u0648\u062f","grandfather_name":"\u0645\u0633\u0641\u0631","family_name":"\u0627\u0644\u062f\u0644\u064a\u062c\u0627\u0646","name_ara":null,"date_of_birth":"1995-12-07","place_of_birth":"","address":"","phone_number":"","mobile_number":"0555856777","email":"","verified_email":false,"dob_hijri":null,"photo_filename":"student.jpg","theme_id":"1","deleted":false,"status_id":"1","lang":"eng","date_format":"1","login_name":"","google_token":null,"block_reports":false,"number":null,"old_school_id":null,"gender":"0"}}]


## Search Outbox Messages [/users/search_outbox_messages?user_id=12&title=Tom&date=2016-07-17 16:58:27&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
    + title : hi (optional, string) - Title of message
    + date : 2016-07-17 16:58:27(optional, date) - Date message sent
###Search Outbox Messages [GET]

This action allows to user search in Outbox messages by sender name or by title of message

+ user_id (int) - user_id
+ title (string) - title
+ date (date) - date

+ Response 200 (application/json)

        [{"id":"9094211_78785","sender_id":"78934","full_name":"Tom Friedman","full_name_ara":null,"semester_id":"318","message_id":"9094211","title":"hi","body":"hhhhh","priority":"0","created":"2016-07-17 16:58:27","type":null,"read":false,"image_url":"https:\/\/s3.amazonaws.com\/classera\/111\/profilepic\/thumb_130\/78934.jpg?response-content-disposition=attachment%3Bfilename%3D%2293105f8e5b940e2b2ed489ffae17da2d.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468921559&Signature=gRteGqcBjLmV0zU%2FqGRe3iCT5V0%3D"}]


## Get message outbox details [/Users/get_message_outbox_details?message_id=10&access_token=your_access_token]

+ Parameters :
    + message_id: 10 (required, number) - ID of message
    

### Get message outbox details [GET]
This action allows to et message outbox details .

+ message_id (int) - message_id

+ Response 200 (application/json)


        [{"Message":{"id":"10","title":"RE: Test 3","body":"\r\n\t&nbsp;\r\n\r\n\t \r\n\t\r\n\t\tTest 3\r\n\r\n\r\n\t&nbsp;\r\n\r\n\t&nbsp;\r\n\r\n\thello\r\n\r\n\t&nbsp;\r\n\r\n\ttest1\r\n","created":"2016-06-28 14:35:02","priority":"0","type":"sent","first_name":"demoa115","family_name":""},"OutboxView":{"recipient_id":"30607","school_id":"111","semester_id":"318","image_url":"https:\/\/s3.amazonaws.com\/classera\/35\/profilepic\/thumb_130\/30607.jpg?response-content-disposition=attachment%3Bfilename%3D%2230607.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468926067&Signature=fvA%2BZufgf7Pu3Ln1lmUIr7VhbhU%3D"}}]


## Reply message [/Users/reply_message?access_token=your_access_token]

### Reply message [POST]
This action allows to Reply message. 

+ user_id: 100 (required, intger) 
+ message_id : 100 (required, intger) 
+ message_title: "hi" (required, string)
+ recipient_id: 101 (required, intger)  
+ message_body: "how are you?" (required, string)

+ Response 200 (application/json)
  
        {"message_id":"9094211","title":"hi","status":"Success replay message"} 
 
        
## Get user notification [/Users/get_user_notification?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    

### Get user notification [GET]
This action allows to get user notification .

+ user_id (int) - user_id

+ Response 200 (application/json)

        {"unseen_assessments":[],"unseen_assessments_count":0,"student_grades_list":[],"grades_count":0,"count_new_exam":1,"list_new_exam":[{"Assignment":{"id":"479283","title":"Test Title","due_datetime":"2016-11-04 00:00:00","course_title":"Math-101","course_id":"7127","status":"Launch"}}],"list_new_homework":[],"count_new_homework":0,"video_attach":[],"count_new_video":0,"document_attach":[],"count_new_doc":0,"list_new_disc":[],"count_new_disc":0,"unread_messages":[{"InboxView":{"id":"9094211_78785","message_id":"9094211","recipient_id":"78785","message_folder":null,"sender_id":"78934","sender_photo":"93105f8e5b940e2b2ed489ffae17da2d.jpg","full_name":"Tom Friedman","full_name_ara":null,"title":"hi","body":"hhhhh","priority":"0","created":"2016-07-17 16:58:27","type":null,"read":false,"has_attachment":"0","school_id":"111","semester_id":"318"}}],"unread_messages_count":1,"report_cards":[{"ReportCards":{"id":"754","title":"Layla Report","created":"2016-05-23 10:28:31"}},{"ReportCards":{"id":"750","title":"Test Android New APP!","created":"2016-04-24 10:52:55"}},{"ReportCards":{"id":"470","title":"Week-1 Report","created":"2015-11-11 12:26:15"}}],"count_new_report_cards":3}


## Parent get child [/Users/parent_get_child?user_id=100&access_token=your_access_token]
+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
  
   
### Parent get child [GET]
This action allows parent to get children list .

+ user_id (int) - user_id

+ Response 200 (application/json)

        [{"Student":{"user_id":{"id":"78785","username":"etss0001","notification_settings":"1023","created":"2014-03-18 14:15:50","modified":"2016-06-22 12:18:07","role_id":"6","school_id":"111","first_name":"Adam","father_name":"","grandfather_name":"","family_name":"Fields","name_ara":null,"date_of_birth":"2000-03-18","place_of_birth":"3793","place_of_birth_country":"224","address":"United States of America, New Yourk","phone_number":"","mobile_number":"0555856777","email":null,"verified_email":false,"email2":null,"nationality_id":"45","dob_hijri":null,"photo_filename":"images (1).jpg","theme_id":"1","deleted":false,"status_id":"1","lang":"eng","date_format":"1","login_name":"demos223","google_login_token":null,"number":"87547854756","old_school_id":null,"gender":"0","block_reports":false,"mawhiba_id":"54321","pioneer_id":null,"bio":"Rolando Cruz is a native of Mexico City and has lived in Portland, Oregon\r\nsince 1996. Since 2008, Rolando has been District Executive for Hispanic Outreach\r\nand responsible for the Soccer and Scouting program at the Boy Scouts of America in\r\nPortland. His bi-cultural background and focus on community collaboration has led\r\nhim to a number of volunteer opportunities and community leadership roles. Rolando\r\nreceived his Bachelor of Science in Communications at Oklahoma Christian\r\nUniversity and a Masters in Management and Organizational Leadership at Warner\r\nPacific College in Portland, Oregon. ","facebook_account":"www.facebook.com\/pages\/Classera\/304534046291945?fref=ts","twitter_account":"classera_me","google_plus_account":null,"instagram_account":"classera_me","linkedin_account":"www.linkedin.com\/company\/classera-inc-","mobile_number2":null,"educational_administration":"","external_school":"","tmp_section_id":null,"level_pioneer_id":null,"section_pioneer_id":null,"parent_pioneer_id":null,"thumb_done":"1","ios_token":null,"android_token":null,"restrict_login":false,"full_name":"Adam   Fields","school_name":"English Test School - 02","student_level":{"id":"42525","student_id":"30743","year_id":"224","level_id":"833","status":null,"created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00"},"level_title":[{"levels":{"title":"Grade-1"}}],"image_url":"https:\/\/s3.amazonaws.com\/classera\/111\/profilepic\/thumb_130\/78785.jpg?response-content-disposition=attachment%3Bfilename%3D%22images_%281%29.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468851456&Signature=hTmYKdD5q4R9iYx%2BbOyXZC%2BS0nA%3D","score_info":{"user_score":"3818.57","current_card_title":"Green","current_card_color":"#afd136","user_ratio":100,"class_index":0,"class_title":"Diamond","class_color":"#730c16"},"current_semester_id":{"year_id":"224","semester_id":"318"}}}}]
  
  
## Get user classera card [/Users/get_user_classera_card?user_id=100&access_token=your_access_token]
+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    
    
### Get user classera card [GET]
This action allows to get user card .

+ user_id (int) - user_id

+ Response 200 (application/json)
    
         [{"ClasseraCardsUsers":{"id":"3","card_number":"30399927095992","linked_by":"78785","class":"4","card_url":"https:\/\/classera.s3.amazonaws.com\/classera\/CLASSERA_CARDS\/card_78785_30399927095992.png"}}]

## Pioneer Get Bus Tracking Link [/users/pioneer_get_bus_tracking_link?user_id=32&access_token=your_access_token]

### Pioneer get bus tracking link [GET]

This action allows you to get pioneer user bus tracking link.

+ user_id (string) - user_id.

+ Response 200 (application/json)

        {"link":"https:\/\/ipfleet.com\/ALHUSSAN\/View\/Localization.GPSTrackingUrl\/?VehicleObserver=F330B5C866106F0079B8E456D33CAC46A86BD189"}


##Edit Contact Information [/Users/edit_contact_information?access_token=your_access_token]
### Edit Contact Information [POST]

This action allows you to edit contact information of an user account to classera system from your website.

+ user_id (string, required) - user ID 
+ address (string) - first_name 
+ phone_number (string) - phone_number 
+ mobile_number (string) - mobile_number 
+ email (string) - email 
+ facebook_account (string) - facebook_account 
+ twitter_account (string) - twitter_account
+ linkedin_account (date) - linkedin_account
+ instagram_account (date) - instagram_account 

+ Response 200 (application/json)

        [
            {
                "success": "1",
                "message": "Contact Information Updated"
            }
        ]        
        
##List User Skills [/Users/list_user_skills?user_id=34&access_token=your_access_token]
### List User Skills [GET]

This action will list all the skills the user has .

+ user_id (string, required) - user ID 

+ Response 200 (application/json)

                {
            "0": {
                "UsersSkill": {
                    "id": "2",
                    "user_id": "34",
                    "skills_category_id": null,
                    "skill": "Cyclist",
                    "skill_level": "Talented",
                    "created": "2017-07-17 15:01:40",
                    "modified": "2017-07-17 15:01:40"
                }
            },
            "1": {
                "UsersSkill": {
                    "id": "3",
                    "user_id": "34",
                    "skills_category_id": null,
                    "skill": "Freediving",
                    "skill_level": "Advanced",
                    "created": "2017-07-17 15:01:56",
                    "modified": "2017-07-17 15:01:56"
                }
            },
            "2": {
                "UsersSkill": {
                    "id": "5",
                    "user_id": "34",
                    "skills_category_id": null,
                    "skill": "swimming",
                    "skill_level": "Beginner",
                    "created": "2017-07-17 16:35:26",
                    "modified": "2017-07-17 17:23:20"
                }
            },
            "3": {
                "UsersSkill": {
                    "id": "18",
                    "user_id": "34",
                    "skills_category_id": null,
                    "skill": "test2",
                    "skill_level": "Beginner",
                    "created": "2017-07-25 09:33:10",
                    "modified": "2017-07-25 10:56:47"
                }
            },
            "4": {
                "UsersSkill": {
                    "id": "19",
                    "user_id": "34",
                    "skills_category_id": null,
                    "skill": "test",
                    "skill_level": "Beginner",
                    "created": "2017-07-25 10:10:21",
                    "modified": "2017-07-25 10:56:16"
                }
            },
            "success": "1"
            }}

##Delete User Skill [/Users/delete_user_skill?access_token=your_access_token]
###Delete  User Skill [POST]

This action will allow the user to delete a skill

+ user_id (string, required) - user ID 
+ skill_id (string, required) - skill ID 

+ Response 200 (application/json)

        {"success":"1","message":"Skill has been deleted"}


##Add Skill for User [/Users/add_skill_for_user?access_token=your_access_token]
### Add Skill for User [POST]

This action will allow the user to add a skill

+ user_id (string, required) - user ID 
+ skill (string, required) - skill Nmae
+ skill_level (string, required) - skill level ('Beginner','Talented','Advanced', 'Skilled', 'Expert')


+ Response 200 (application/json)

        {"success":"1","message":"Skill has been added"}
        

##Edit User Skill [/Users/edit_user_skill?access_token=your_access_token]
### Add Skill for User [POST]

This action will allow the user to edit a skill

+ user_id (string, required) - user ID 
+ skill (string, required) - skill Nmae
+ skill_level (string, required) - skill level ('Beginner','Talented','Advanced', 'Skilled', 'Expert')


+ Response 200 (application/json)

        {"success":"1","message":"Skill has been edited"}




        
## Group Public Profile

Resources related to Public Profiles in the API.

## Get Public Profile [/users/get_public_profile?access_token=your_access_token]

### Get Public Profile [GET]

This action returns public profile information.

+ user_id (int) - target user id.

        


        
+ Response 200 (application/json)

        {
        "livesin_city_en": "City",
        "livesin_city_ar": "مدينةة",
        "livesin_country_en": "Country",
        "livesin_country_ar": "الدولة",
        "student_level_title": "Level",
        "section_title": "Section",
        "transfers": [],
        "user_profile_pic": "",
        "userEducations": [
            {
                "UsersEducation": {
                    "id": "Education_id",
                    "user_id": "user_id",
                    "country_id": "country_id",
                    "city_id": "city_id",
                    "school": "school name",
                    "from_year": "starting year",
                    "to_year": "end year",
                    "degree": "degree",
                    "field_of_study": "Field",
                    "description": "field description",
                    "modified": "2017-07-17 15:04:42",
                    "created": "2017-07-17 15:04:42"
                }
            }
        ],
        "userExperiances": [
            {
                "UsersWorksExperiance": {
                    "id": "Work experience id",
                    "user_id": "user_id",
                    "start_date": "starting date",
                    "end_date": "end date",
                    "job_title": "Job title",
                    "job_type": "Job type",
                    "company_name": "Company name",
                    "description": "Job description",
                    "experiance_certificate": "Certifcation",
                    "created": "2017-07-17 15:01:17",
                    "modified": "2017-07-19 14:02:18"
                }
            }
        ],
        "userSkills": [
            {
                "UsersSkill": {
                    "id": "Skill id",
                    "user_id": "user_id",
                    "skills_category_id": "category id",
                    "skill": "Skill",
                    "skill_level": "Level",
                    "created": "2017-07-17 15:01:40",
                    "modified": "2017-07-17 15:01:40"
                }
            }
        ],
        "userInterests": [
            {
                "UsersInterest": {
                    "id": "Interest id",
                    "user_id": "user_id",
                    "interest": "Interest title",
                    "description": "interest description",
                    "created": "2017-07-17 15:02:18",
                    "modified": "2017-07-17 15:02:18"
                }
            }
        ],
        "userLanguages": [
            {
                "UsersLanguage": {
                    "id": "language id",
                    "user_id": "user_id",
                    "language": "Language",
                    "proficiency": "proficiency",
                    "created": "2017-07-17 15:02:40",
                    "modified": "2017-07-17 15:02:40"
                }
            }
        ],
        "latest_eportfolios": [
            {
                "Eportfolio": {
                    "id": "EPortfolio id",
                    "title": "Eportfolio title",
                    "brief": "Eportfolio brief description",
                    "details": "<p>\r\n\tdetails</p>\r\n",
                    "user_id": "user_id",
                    "user_role_id": "role_id",
                    "reference_type": "Eportfolio",
                    "reference_sub_type": null,
                    "reference_id": null,
                    "type_id": "1",
                    "course_id": "7",
                    "semester_id": "1",
                    "school_id": "1",
                    "level_id": null,
                    "attachment_id": "5",
                    "date": "2017-07-19 11:24:00",
                    "status": "1",
                    "sharing_status": "2",
                    "eportfolio": true,
                    "image": "IMG_1261.JPG",
                    "deleted": false,
                    "modified": "2017-07-19 11:25:30",
                    "created": "2017-07-19 11:25:30",
                    "total_views": "1"
                },
                "Attachment": {
                    "id": "5",
                    "original_filename": "FullSizeRender.jpg",
                    "created": "2017-07-19 11:24:41",
                    "title": "FullSizeRender.jpg",
                    "comments": null,
                    "deleted": false,
                    "type": "ePortfolio",
                    "type_reference_id": null,
                    "content_type": "image/jpeg",
                    "publish_date": "2017-07-19 11:24:41",
                    "sharing_status": "0",
                    "user_id": "34",
                    "school_id": "1",
                    "original_attachment": null,
                    "duplicate_stss": false,
                    "id_hash": null,
                    "semester_id": null,
                    "file_hash": null,
                    "missing": false,
                    "duplicate_xtxs": false,
                    "blocked": false,
                    "preparation_id": "2",
                    "course_id": null,
                    "expiry_date": null,
                    "allow_download": "1",
                    "publish_date_Ymd": "2017-07-19"
                },
                "EportfolioType": {
                    "id": "1",
                    "type_eng": "type",
                    "type_ara": "الفئة"
                },
                "Tag": []
            }
        ]   
        }
        
## Edit Personal Information [/Users/edit_personal_information?access_token=your_access_token]
### Edit Personal Information [POST]

This action allows you to edit personal information of an user account to classera system from your website.

+ user_id (string, required) - user ID 
+ first_name (string, required) - first_name 
+ father_name (string) - father_name 
+ grandfather_name (string) - grandfather_name 
+ family_name (string, required) - family_name 
+ place_of_birth (string) - place_of_birth 
+ place_of_birth_country (string) - place_of_birth_country
+ date_of_birth (date) - date_of_birth YYYY-MM-DD 

+ Response 200 (application/json)

        {"success":"1","message":"Personal Information Updated"}
      
      
## Get School Public Profile [/publicprofiles/school?access_token=your_access_token&school_id=1]

### Get School Public Profile [GET]

This action returns School public profile.

+ school_id (int) - target school id.

        


        
+ Response 200 (application/json)

        [
            {
                "City": {
                    "ID": "3174",
                    "Name_English": "Jeddah",
                    "Name_Arabic": "جدة",
                    "Country_Id": "186",
                    "CountryCode": "SAU",
                    "District": "Mekka",
                    "mawhiba_id": "2"
                },
                "Country": {
                    "ID": "186",
                    "Name_English": "Saudi Arabia",
                    "Name_Arabic": "المملكة العربية السعودية",
                    "Code": "SAU",
                    "Code2": "SA",
                    "Continent": "Asia",
                    "Region": "Middle East"
                }
            },
            [
                {
                    "Eportfolio": {
                        "id": "4",
                        "title": "t22",
                        "brief": "t22",
                        "details": "<p>\r\n\tt22</p>\r\n",
                        "user_id": "31",
                        "user_role_id": "2",
                        "reference_type": "Eportfolio",
                        "reference_sub_type": null,
                        "reference_id": null,
                        "type_id": "1",
                        "course_id": null,
                        "semester_id": "1",
                        "school_id": "1",
                        "level_id": null,
                        "attachment_id": null,
                        "date": "2017-07-24 11:58:00",
                        "status": "1",
                        "sharing_status": "3",
                        "eportfolio": true,
                        "image": null,
                        "deleted": false,
                        "modified": "2017-07-24 11:59:18",
                        "created": "2017-07-24 11:59:18",
                        "total_views": "0"
                    },
                    "Attachment": {
                        "id": null,
                        "original_filename": null,
                        "created": null,
                        "title": null,
                        "comments": null,
                        "deleted": null,
                        "type": null,
                        "type_reference_id": null,
                        "content_type": null,
                        "publish_date": null,
                        "sharing_status": null,
                        "user_id": null,
                        "school_id": null,
                        "original_attachment": null,
                        "duplicate_stss": null,
                        "id_hash": null,
                        "semester_id": null,
                        "file_hash": null,
                        "missing": null,
                        "duplicate_xtxs": null,
                        "blocked": null,
                        "preparation_id": null,
                        "course_id": null,
                        "expiry_date": null,
                        "allow_download": null,
                        "publish_date_Ymd": null
                    },
                    "EportfolioType": {
                        "id": "1",
                        "type_eng": "Homework",
                        "type_ara": "وظيفة"
                    },
                    "Tag": []
                },
                {
                    "Eportfolio": {
                        "id": "3",
                        "title": "test EPortfolio",
                        "brief": "test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio test EPortfolio ",
                        "details": "<p>\r\n\ttest EPortfoliotest EPortfoliotest EPortfoliotest EPortfoliotest EPortfoliotest EPortfoliotest EPortfolio</p>\r\n",
                        "user_id": "31",
                        "user_role_id": "2",
                        "reference_type": "Eportfolio",
                        "reference_sub_type": null,
                        "reference_id": null,
                        "type_id": "2",
                        "course_id": null,
                        "semester_id": "1",
                        "school_id": "1",
                        "level_id": null,
                        "attachment_id": null,
                        "date": "2017-07-21 09:08:00",
                        "status": "1",
                        "sharing_status": "2",
                        "eportfolio": true,
                        "image": null,
                        "deleted": false,
                        "modified": "2017-07-21 09:10:09",
                        "created": "2017-07-21 09:10:09",
                        "total_views": "5"
                    },
                    "Attachment": {
                        "id": null,
                        "original_filename": null,
                        "created": null,
                        "title": null,
                        "comments": null,
                        "deleted": null,
                        "type": null,
                        "type_reference_id": null,
                        "content_type": null,
                        "publish_date": null,
                        "sharing_status": null,
                        "user_id": null,
                        "school_id": null,
                        "original_attachment": null,
                        "duplicate_stss": null,
                        "id_hash": null,
                        "semester_id": null,
                        "file_hash": null,
                        "missing": null,
                        "duplicate_xtxs": null,
                        "blocked": null,
                        "preparation_id": null,
                        "course_id": null,
                        "expiry_date": null,
                        "allow_download": null,
                        "publish_date_Ymd": null
                    },
                    "EportfolioType": {
                        "id": "2",
                        "type_eng": "Research",
                        "type_ara": "بحث"
                    },
                    "Tag": []
                },
                {
                    "Eportfolio": {
                        "id": "2",
                        "title": "Test new",
                        "brief": "test test",
                        "details": "<p>\r\n\tdetails</p>\r\n",
                        "user_id": "34",
                        "user_role_id": "6",
                        "reference_type": "Eportfolio",
                        "reference_sub_type": null,
                        "reference_id": null,
                        "type_id": "1",
                        "course_id": "7",
                        "semester_id": "1",
                        "school_id": "1",
                        "level_id": null,
                        "attachment_id": "5",
                        "date": "2017-07-19 11:24:00",
                        "status": "1",
                        "sharing_status": "2",
                        "eportfolio": true,
                        "image": "IMG_1261.JPG",
                        "deleted": false,
                        "modified": "2017-07-19 11:25:30",
                        "created": "2017-07-19 11:25:30",
                        "total_views": "1"
                    },
                    "Attachment": {
                        "id": "5",
                        "original_filename": "FullSizeRender.jpg",
                        "created": "2017-07-19 11:24:41",
                        "title": "FullSizeRender.jpg",
                        "comments": null,
                        "deleted": false,
                        "type": "ePortfolio",
                        "type_reference_id": null,
                        "content_type": "image/jpeg",
                        "publish_date": "2017-07-19 11:24:41",
                        "sharing_status": "0",
                        "user_id": "34",
                        "school_id": "1",
                        "original_attachment": null,
                        "duplicate_stss": false,
                        "id_hash": null,
                        "semester_id": null,
                        "file_hash": null,
                        "missing": false,
                        "duplicate_xtxs": false,
                        "blocked": false,
                        "preparation_id": "2",
                        "course_id": null,
                        "expiry_date": null,
                        "allow_download": "1",
                        "publish_date_Ymd": "2017-07-19"
                    },
                    "EportfolioType": {
                        "id": "1",
                        "type_eng": "Homework",
                        "type_ara": "وظيفة"
                    },
                    "Tag": []
                }
            ],
            {
                "School": {
                    "id": "1",
                    "name": "Classera",
                    "english_name": "Classera",
                    "prefix": "cls",
                    "city": "Jeddah",
                    "country_id": "186",
                    "city_id": "3174",
                    "school_group_id": "106",
                    "management": true,
                    "number": "0",
                    "address": "",
                    "about_school": "",
                    "phone_number": "",
                    "fax_number": "",
                    "email": "",
                    "website": "",
                    "logo": "https://s3.amazonaws.com/classera/1/Schlogo/1.png",
                    "lang": "ara",
                    "timezone": "Asia/Riyadh",
                    "date_format": "1",
                    "type": "0",
                    "registration_open": "1",
                    "created": "2017-06-01 00:00:00",
                    "modified": "2017-07-20 09:39:49",
                    "pioneer_id": null,
                    "facebook_account": " ",
                    "twitter_account": " ",
                    "google_plus_account": " ",
                    "instagram_account": " ",
                    "linkedin_account": " ",
                    "allow_users_open_publicprofile": "1",
                    "allow_users_upload_eportfolios": "1",
                    "allow_users_upload_posts": "1",
                    "publicprofiles_privecy_level_id": "2",
                    "allow_students_change_password": "1",
                    "allow_teachers_change_password": "1",
                    "allow_others_change_password": "1",
                    "allow_students_change_login_name": "1",
                    "allow_teachers_change_login_name": "1",
                    "allow_others_change_login_name": "1",
                    "allow_students_change_profile_pic": "1",
                    "show_american_question_bank": true,
                    "allow_smart_mate_generation": true,
                    "allow_teacher_to_link_preparation_standards": true,
                    "deleted": false,
                    "id_hash": "1",
                    "gpa_base": "4.00",
                    "allow_students_change_phone_number": true,
                    "allow_parents_change_phone_number": true,
                    "sms_sender_name": "",
                    "allow_tsupv_approve_preparation": false,
                    "allow_discussion_board": true,
                    "allow_students_create_discussions": true,
                    "absences_notification_limit": "0",
                    "lectures_absences_notification_limit": "0",
                    "absences_notification_excused": false,
                    "lectures_absences_notification_excused": false,
                    "absences_notification": true,
                    "lectures_absences_notification": true,
                    "allow_tsupv_show_messages_between_teachers_and_students": false,
                    "is_mawhiba_olympics_exam_school": "0",
                    "mawhiba_portal_exam_id": null,
                    "allow_managers_add_announcements": false,
                    "allow_reset_password_via_sms": true
                }
            }
        ]


## Group Absences

Resources related to users absences in the API.

## Add absence [/absences/add_absence?access_token=your_access_token]

### Add absence  [POST]

This action allows to add a new section

+ user_id: 100 (optional, intger)
+ date: 2015-6-21 (required, date [yyyy-mm-dd])
+ excused: 1 or 0 (required, intger) 
+ comments: comments (optional, string)


+ Response 200 (application/json)

        {"message":"Absence has been saved"}
   
## Pioneer add absence [/absences/pioneer_add_absence?access_token=your_access_token]

### Pioneer add absence  [POST]

This action allows to edit course

+ pioneer_id: 100 (optional, intger)
+ government_id: 100 (optional, intger)
+ date: 2015-6-21 (required, date [yyyy-mm-dd])
+ excused: 1 or 0 (required, intger) 
+ comments: comments (optional, string)




+ Response 200 (application/json)

        {"message":"Absence has been saved"} 
        
## Get Daily Absences [/absences/get_daily_absences?user_id=100&semester_id=32&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
    + semester_id: 100 (required, number) - Semester ID in form of an integer

### Get Daily Absences [GET]

This action allows you to get daily absences for student in specific semester.

+ user_id (int) - user_id
+ semester_id (int) - semster_id

+ Response 200 (application/json)

        [{"StudentAbsencesView":{"id":"28","date":"2014-10-16","excused":false,"comments":null}},{"StudentAbsencesView":{"id":"85","date":"2014-12-03","excused":true,"comments":null}}]

        

## Get Courses Absences [/absences/get_courses_absences?user_id=100&semester_id=32&access_token=your_access_token]

+ Parameters : 
    + user_id: 100 (required, number) - User ID  in form of an integer
    + semester_id: 100 (required, number) - Semester ID in form of an integer

### Get Courses Absences [GET]

This action allows you to get courses absences for student in specific semester.

+ user_id (int) - user_id
+ semester_id (int) - semster_id

+ Response 200 (application/json)

        [{"StudentCoursesView":{"id":"28","date":"2014-10-16","excused":false,"comments":null}},{"StudentAbsencesView":{"id":"85","date":"2014-12-03","excused":true,"comments":null}}]


## Group Attachments               
Resources related to attachments in the API.

## Get user attachments [/attachments/get_attachments?user_id=12&semester_id=10&course_id=121&type=Video&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID of the user in form of an integer
    + course_id: 100 (optional, number) - Course Id of the user in form of an integer
    + semester_id: 100 (required, number) - Semester Id of the user in form of an integer
    + type: Video (optional, string) - Attachment type ('Video','Message','Scorm','Behavior','Material') of the user in form of a string

### Get User Attachments [GET]

This action allows to get users attachments in a specific semester 

+ user_id (int) - user_id
+ semester_id (int) - semester_id
+ course_id (int) - course_id
+ type (string) - type

+ Response 200 (application/json)

        [{"Attachment":{"id":"1","original_filename":"mJaHARCfcA0","created":"2014-10-16 13:31:10","title":"test","comments":"","deleted":false,"type":"Video","content_type":"YouTube","publish_date":"0000-00-00 00:00:00","sharing_status":"2","user_id":"10564","school_id":"16","original_attachment":null,"duplicate_stss":false,"id_hash":null,"semester_id":"32","file_hash":null,"missing":false,"duplicate_xtxs":false,"blocked":false,"preparation_id":"1","publish_date_Ymd":"2014-10-16"}},{"Attachment":{"id":"2","original_filename":"lynbTm_XPEc","created":"2014-10-20 11:41:34","title":"\u0628\u0633\u0645 \u0627\u0644\u0644\u0647","comments":"","deleted":false,"type":"Video","content_type":"YouTube","publish_date":"0000-00-00 00:00:00","sharing_status":"2","user_id":"17103","school_id":"22","original_attachment":null,"duplicate_stss":false,"id_hash":null,"semester_id":"64","file_hash":null,"missing":false,"duplicate_xtxs":false,"blocked":false,"preparation_id":null,"publish_date_Ymd":"2014-10-20"}},{"Attachment":{"id":"3","original_filename":"20130523_113607.mp4","created":"2014-10-21 18:42:35","title":"test","comments":"tttttttttt","deleted":false,"type":"Video","content_type":"video\/mp4","publish_date":"0000-00-00 00:00:00","sharing_status":"2","user_id":"10564","school_id":"16","original_attachment":null,"duplicate_stss":false,"id_hash":null,"semester_id":"32","file_hash":"267130a9cd943b7f0ccccf2cab26ef46","missing":false,"duplicate_xtxs":false,"blocked":false,"preparation_id":"1","publish_date_Ymd":"2014-10-21"}},{"Attachment":{"id":"4","original_filename":"mJaHARCfcA0","created":"2014-12-07 16:06:28","title":"\u062d\u0635\u0629 \u0631\u0627\u0626\u0639\u0629","comments":"","deleted":false,"type":"Video","content_type":"YouTube","publish_date":"0000-00-00 00:00:00","sharing_status":"2","user_id":"10564","school_id":"16","original_attachment":null,"duplicate_stss":true,"id_hash":null,"semester_id":"32","file_hash":null,"missing":false,"duplicate_xtxs":true,"blocked":true,"preparation_id":"9","publish_date_Ymd":"2014-12-07"}},{"Attachment":{"id":"5","original_filename":"pqzxODkBGfM","created":"2014-12-25 18:49:22","title":"\u0639\u0646\u0648\u0627\u0646 \u0637\u0648\u064a\u064a\u064a\u064a\u064a\u064a\u064a\u064a\u064a\u064a\u064a\u0644 \u062c\u062f\u0627 \u062c\u062f\u0627 \u062c\u062f\u0627 \u0623\u0648\u064a \u062e\u0627\u0644\u0635","comments":"","deleted":false,"type":"Video","content_type":"YouTube","publish_date":"0000-00-00 00:00:00","sharing_status":"2","user_id":"10564","school_id":"16","original_attachment":null,"duplicate_stss":false,"id_hash":null,"semester_id":"32","file_hash":null,"missing":false,"duplicate_xtxs":false,"blocked":false,"preparation_id":null,"publish_date_Ymd":"2014-12-25"}}]

##  Download Attachments [/attachments/download_attachment?attachment_id=12&access_token=your_access_token]

+ Parameters :
    + attachment_id: 100 (required, number) - Attachment ID in form of an integer
   

### Download Attachments [GET]

This action allows to download attachment

+ attachment_id (int) - user_id

+ Response 200 (application/json)

        {"download_url":"https:\/\/s3.amazonaws.com\/classera\/16\/behavior\/32.pdf?response-content-disposition=attachment%3Bfilename%3D%22kajfaslksdjpoiwjeflaskdjfpowiejfskajdfaslkjdfpaoiefasdjfalksjdfasjdfjaspdifhasdfaskjdfalksdjflasdjfasdpfijad.pdf%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1433933268&Signature=aAio8k3EsrXbkQ7sEdmZ0XpU0cQ%3D"}

##  View attachment [/attachments/view_attachment?attachment_id=12&access_token=your_access_token]

+ Parameters : 
    + attachment_id: 100 (required, number) - Attachment ID in form of an integer
   

### View attachment [GET]

This action allows to view attachment

+ attachment_id (int) - user_id

+ Response 200 (application/json)

        {"Attachment":{"id":"32","original_filename":"kajfaslksdjpoiwjeflaskdjfpowiejfskajdfaslkjdfpaoiefasdjfalksjdfasjdfjaspdifhasdfaskjdfalksdjflasdjfasdpfijad.pdf","created":"2015-02-19 09:07:49","title":"kajfaslksdjpoiwjeflaskdjfpowiejfskajdfaslkjdfpaoiefasdjfalksjdfasjdfjaspdifhasdfaskjdfalksdjflasdjfasdpfijad.pdf","comments":null,"deleted":false,"type":"Behavior","content_type":"application\/pdf","publish_date":"2015-02-19 09:07:49","sharing_status":"0","user_id":"39674","school_id":"16","original_attachment":null,"duplicate_stss":false,"id_hash":null,"semester_id":null,"file_hash":null,"missing":false,"duplicate_xtxs":false,"blocked":false,"preparation_id":null,"publish_date_Ymd":"2015-02-19"}}


## Get student material list  [/Attachments/get_student_material_list?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
   

### Get student material list  [GET]
This action allows to get material list.

+ user_id (int) - user_id


+ Response 200 (application/json)
        
        {"course_material": [{"StudentReadNotifDocView": {"id": "2827098","attach_type": "Material","attach_title": "الخزف","course_title": "Math-101","attach_created": "2016-01-26 11:50:26","teacher_name": "Tom   Friedman","likes": "2"}},{"StudentReadNotifDocView": {"id": "2827098","attach_type": "Material","attach_title": "الخزف","course_title": "Math-101","attach_created": "2016-01-26 11:50:26","teacher_name": "Tom   Friedman","likes": "2"}}],"count": 15}


## Get student material by search  [/Attachments/get_student_material_by_search?user_id=100&course_id=1&text=hi&access_token=your_access_token]

+ Parameters :
   + user_id: 100 (required, number) - ID of the user in form of an integer
   + course_id :1 (optional, number) - course id 
   + text : hi (optional , string) - text is the attachment title 

### Get student material by search  [GET]
This action allows to search in  material list.

+ user_id (int) - user_id
+ course_id (int) - course_id
+ text (string) - text 


+ Response 200 (application/json)

        [{"StudentReadNotifDocView":{"id":"3145800","attach_type":"Material","attach_title":"how use it","attach_created":"2016-08-17 11:21:26","teacher_name":"Tom   Friedman","likes":"0","course_title":"Math-101"}}]


## Get student all video lecture  [/Attachments/get_student_all_video_lecture?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
   

### Get student all video lecture  [GET]
This action allows to get  student all video lectures.

+ user_id (int) - user_id


+ Response 200 (application/json)
        
        
        {"video_lectures": [{"StudentReadNotifVideoView": {"id": "3145706","attach_type": "Video","attach_title": "Tommato2","attach_created": "2016-06-15 12:35:22","course_title": "Math-101","teacher_name": "Tom   Friedman","content_type": "YouTube","likes": "0","att_url": "http://www.youtube.com/watch?v=uyezuHhSMGs"}},{"StudentReadNotifVideoView": {"id": "2690369","attach_type": "Video","attach_title": "lesson 29","attach_created": "2015-12-29 08:28:39","course_title": "English-101","teacher_name": "Tom   Friedman","content_type": "YouTube","likes": "1","att_url": "http://www.youtube.com/watch?v=8F0NYBBKczM"}}],"count": 37}


## Get student video lecture by search  [/Attachments/get_student_video_lecture_by_search?user_id=100&course_id=1&text=hi&created=2015-10-22 11:50:00&access_token=your_access_token]

+ Parameters :
   + user_id: 100 (required, number) - ID of the user in form of an integer
   + course_id : 1 (optional, number) - course id 
   + text : hi (optional , string) - text is the attachment title 
   + created : 2015-10-22 11:50:00  (optional , date) - date
### Get student video lecture by search  [GET]
This action allows to search in   video lecture.

+ user_id (int) - user_id
+ course_id (int) - course_id
+ text (string) - text
+ created (date) - date

+ Response 200 (application/json)
        
        [{"StudentReadNotifVideoView":{"id":"1843509","attach_type":"Video","attach_title":"Test video","attach_created":"2015-10-22 11:50:00","course_id":"7127","teacher_name":"Tom   Friedman","content_type":"video\/mp4","likes":"0","course_title":"Math-101"}}]

## Get attachment details  [/Attachments/get_attachment_details?user_id=100&attachment_id=3145706&access_token=your_access_token]

+ Parameters : 
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + attachment_id: 3145706 (required, number) - ID of the attachment 

### Get attachment details  [GET]
This action allows to get  student  attachment details.

+ user_id (int) - user_id
+ attachment_id (int) - attachment_id 

+ Response 200 (application/json)
        
        [{"Attachment": {"type": "Video","title": "Tommato2","user_id": "78934","comments": "","created": "2016-06-15 12:35:22","course_id": "7127","original_filename": "uyezuHhSMGs","content_type": "YouTube","course_title": "Math-101","i_likes": false,"i_understand": false,"likes": "0","understand": "0","att_url": "http://www.youtube.com/watch?v=uyezuHhSMGs"},"User": {"id": "78934","first_name": "Tom","family_name": "Friedman","image_url": "https://s3.amazonaws.com/classera/111/profilepic/thumb_130/78934.jpg?response-content-disposition=attachment%3Bfilename%3D%2293105f8e5b940e2b2ed489ffae17da2d.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468843595&Signature=eVy9i0CqP2sI6TnA2WNlC6HVeJc%3D"}}]    

## Get attachment comments  [/Attachments/get_attachment_comments?user_id=100&attachment_id=3145706&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + attachment_id: 3145706 (required, number) - ID of the attachment 

### Get attachment comments  [GET]
This action allows to get attachment comments.

+ user_id (int) - user_id
+ attachment_id (int) - attachment_id 

+ Response 200 (application/json)
        
        {"comment": [{"AttachmentComment": {"text": "Test","created": "2016-07-04 11:21:05","approved": "0"},"User": {"id": "78785", "first_name": "Adam","family_name": "Fields","image_url": "https://s3.amazonaws.com/classera/111/profilepic/thumb_130/78785.jpg?response-content-disposition=attachment%3Bfilename%3D%22images_%281%29.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468844266&Signature=1bm9wvH1aDVAWVvSgoiV3PSyMZ0%3D"}}],"count": 2}

## Add reaction [/Attachments/add_reaction?access_token=your_access_token]

### Add reaction  [POST]
This action allows to add like , unlike understand and understand.

+ user_id: 100 (required, intger) 
+ attachment_id: 100 (required, intger) 
+ type (required, intger) : 1 
 
+ Response 200 (application/json)
        
        { "message": "Success Insert" }

## Add attachment comment [/Attachments/add_attachment_comment?access_token=your_access_token]

### Add attachment comment  [POST]
This action allows student to add comment to attachment .

+ user_id: 100 (required, intger) 
+ attachment_id: 100 (required, intger) 
+ text: "hi" (required, string) : 1 
 
+ Response 200 (application/json)
        
         { "message": "Success Insert comment " }

## Group Guardians               
Resources related to guardians in the API.

## Get Children [/guardians/get_chidlren?user_id=12&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID of the user in form of an integer
    
### Get Children [GET]

This action allows to get gurdian's children in the system

+ user_id (int) - user_id


+ Response 200 (application/json)

        [{"Student":{"id":"3124","number":"2000","english_first_name":"Montaser","english_father_name":"MHD","english_grandfather_name":"Essam","english_family_name":"Al Sawi","user_id":"10434","guardian_id":null,"admission_year":"35","academic_number":null,"created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00"},"User":{"id":"10434","nationality_id":"1","mawhiba_id":null,"username":"fdtsts0001","password":"45e068b5c30decd5883ff5bfa4aa20f74c6e392e","notification_settings":"1023","created":"2011-12-31 12:58:20","modified":"2013-09-19 18:43:21","role_id":"6","school_id":"16","first_name":"\u0645\u0646\u062a\u0635\u0631 ","father_name":"\u0645\u062d\u0645\u062f","grandfather_name":"\u0639\u0635\u0627\u0645","family_name":"\u0627\u0644\u0635\u0627\u0648\u064a","name_ara":null,"date_of_birth":"2001-03-07","place_of_birth":"","address":"","phone_number":"","mobile_number":"","email":"","verified_email":false,"dob_hijri":null,"photo_filename":"N\u00e9nuphars.jpg","theme_id":"1","deleted":false,"status_id":"1","lang":null,"date_format":"0","login_name":null,"google_token":null,"block_reports":false,"number":null,"old_school_id":null,"gender":"0","profilepic":"\/img\/thumb.png"},"Level":[{"id":"217","title":"\u0627\u0644\u062b\u0627\u0644\u062b \u0627\u0644\u0645\u062a\u0648\u0633\u0637","title_ara":null,"stage_id":"86","order":"6","created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00","StudentsLevel":{"id":"2599","student_id":"3124","year_id":"35","level_id":"217","status":null,"created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00"}}]}]


## Get get student gurdians [/guardians/get_student_gurdians?user_id=12&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID of the user in form of an integer
    
### Get get student gurdians [GET]

This action allows to get student's gurdians detials

+ user_id (int) - user_id


+ Response 200 (application/json)

        [{"User":{"id":"10443","mawhiba_id":"0","pioneer_id":"0","username":"fdtstg0002","password":"45e068b5c30decd5883ff5bfa4aa20f74c6e392e","notification_settings":"1023","created":"2011-12-31 13:18:55","modified":"2015-05-12 13:13:20","role_id":"3","school_id":"16","first_name":"\u0646\u0627\u064a\u0641","father_name":"\u062d\u0645\u062f","grandfather_name":"\u0627\u0628\u0631\u0627\u0647\u064a\u0645","family_name":"\u0627\u0644\u062f\u0644\u064a\u062c\u0627\u0646","name_ara":null,"date_of_birth":"2011-12-31","place_of_birth_country":null,"place_of_birth":"","address":"","phone_number":"","mobile_number":"0505656108","email":null,"verified_email":false,"nationality_id":"1","dob_hijri":null,"photo_filename":"Photo1.jpg","theme_id":"1","deleted":false,"status_id":"1","lang":"eng","date_format":"0","login_name":"","google_login_token":null,"google_token":null,"block_reports":false,"number":"","old_school_id":null,"gender":"0","bio":null,"facebook_account":null,"twitter_account":null,"google_plus_account":null,"instagram_account":null,"linkedin_account":null,"full_name":"\u0646\u0627\u064a\u0641 \u062d\u0645\u062f \u0627\u0628\u0631\u0627\u0647\u064a\u0645 \u0627\u0644\u062f\u0644\u064a\u062c\u0627\u0646"}},{"User":{"id":"39809","mawhiba_id":"0","pioneer_id":"0","username":"fdtstg1608","password":"3159fd6e22a3be5daa3c9a2397bd65fbe49a5b23","notification_settings":"1023","created":"2013-12-01 15:45:52","modified":"2014-06-07 23:51:50","role_id":"3","school_id":"16","first_name":"\u0645\u0627\u0647\u0631 \u0628\u0646","father_name":"\u0639\u0628\u062f \u0631\u0628 \u0627\u0644\u0631\u0636\u0627","grandfather_name":"","family_name":"\u0628\u0648\u0639\u0644\u064a","name_ara":null,"date_of_birth":"2014-06-07","place_of_birth_country":null,"place_of_birth":"","address":"","phone_number":"966555856777","mobile_number":"966555856777","email":"","verified_email":false,"nationality_id":"1","dob_hijri":null,"photo_filename":null,"theme_id":"1","deleted":false,"status_id":"1","lang":null,"date_format":"0","login_name":"","google_login_token":null,"google_token":null,"block_reports":false,"number":null,"old_school_id":null,"gender":"0","bio":null,"facebook_account":null,"twitter_account":null,"google_plus_account":null,"instagram_account":null,"linkedin_account":null,"full_name":"\u0645\u0627\u0647\u0631 \u0628\u0646 \u0639\u0628\u062f \u0631\u0628 \u0627\u0644\u0631\u0636\u0627 \u0628\u0648\u0639\u0644\u064a"}}]



## Group Behaviors               
Resources related to behaviors in the API.

## Get Student Behaviors [/behaviors/get_student_behaviors?user_id=12&show_to_guardian=1&semester_id=32&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID of the user in form of an integer
    + semester_id: 100 (required, number) - Semester ID in form of an integer
    + show_to_guardian : 1 (required, number) - show_to_guardian in form of an integer of 0 or 1
    
### Get Student Behaviors  [GET]

This action allows to get student behaviors in the system

+ user_id (int) - user_id
+ semester_id (int) - semester_id


+ Response 200 (application/json)

        [{"StudentBehavior":{"id":"3","date":"2015-02-19"},"Behavior":{"title":"\u0645\u0634\u0627\u063a\u0628\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0641\u0635\u0644","BehaviorGroup":[]},"Action":{"title":null},"Student":[]},{"StudentBehavior":{"id":"4","date":"2015-04-21"},"Behavior":{"title":"\u0645\u0634\u0627\u063a\u0628\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0641\u0635\u0644","BehaviorGroup":[]},"Action":{"title":null},"Student":[]},{"StudentBehavior":{"id":"9","date":"2015-03-15"},"Behavior":{"title":"\u0645\u0634\u0627\u063a\u0628\u0629 \u062f\u0627\u062e\u0644 \u0627\u0644\u0641\u0635\u0644","BehaviorGroup":[]},"Action":{"title":null},"Student":[]}]
        
## Add Student Behavior [/Behaviors/add_student_behavior?access_token=your_access_token]
This action allows you to add a student behavior to classera system from your website.
### Add Student Behavior [POST]

+ student_id (int, required) - Student's User id.
+ behavior_id (string, required) - Behavior id.
+ action_id (int) - Action id.
+ created_by (int) - User id of the recorder of said behavior.
+ year_id (int, required) - Year id.
+ show_to_guardian (int, required) - [1 => show, 0=> hide].
+ show_to_student (int) - [1 => show, 0=> hide].
+ blocked (int, required) - [1 => blocked, 0 => not blocked].
+ blocked_by (int, required if blocked) - blocker user id.
+ blocked_reason (string) - Blocking reason. 
+ lecture_id (int) - lecture id associated with said behavior.
+ timeslot_id (int) - timeslot id associated with said behavior.
+ semester_id (int, required) - Semester associated with said behavior.
+ date (date, required, Format: YYYY-MM-DD, required) - behavior date.
+ details (string, required) - behavior details. 
+ attachment_id (int) - Attachment id associated with said behavior.

+ Response 200 (application/json)

        {"status":"success","message":"Behavior added successfully"}
        
        


## Edit Student Behavior [/Behaviors/edit_student_behavior?access_token=your_access_token]
### Edit Student Behavior [POST]

This action allows you to edit a student behavior to classera system from your website.
+ id (string, required) - Behavior ID
+ student_user_id (string, required) - User ID
+ behavior_id (string) - the ID of a behavior type 
+ grandfather_name (string) - grandfather_name 
+ details (string) - details of the behavior 
+ date (date) - date YYYY-MM-DD
+ show_to_guardian (int) - [1 => show, 0=> hide]
+ show_to_student (int) - [1 => show, 0=> hide] 

+ Response 200 (application/json)

        {"success":"1","message":"Behavior Updated"}
        
## Behavior Summary [/Behaviors/behaviors_summary?access_token=your_access_token]

+ Parameters :
    + user_id:100 (string, required) - user id of adviser, school admin or manager.
    + semester_id:1 (string) - the default is the current semeter
    + from:2017-1-1 (date, YYYY-MM-DD) - a starting date for query (if used 'to' is required)
    + to:2017-2-1 (date, YYYY-MM-DD) - an ending date for query (if used 'from' is required)

### Behavior Summary [GET]

This action allows you to get report of behavior for your students from classera to your website.

+ user_id (string, required) 
+ semester_id (string) 
+ from (date, YYYY-MM-DD) 
+ to (date, YYYY-MM-DD)
        
+ response 200 (application/json)

            {
        "StudentBehaviorsView": {
            "id": "107",
            "student_id": "6",
            "full_name": "mohammed jamal aziz janbi",
            "name_ara": "محمد جمال عبدالعزيز جنبي",
            "level_id": "1",
            "level_title": "Grade 7",
            "section_id": "1",
            "section_title": "A",
            "behavior_id": "1",
            "behavior_title": "اجتهاد الطالب في النشاطات المدرسية - student participated always in school activities  ",
            "behavior_points": "1",
            "action_id": "1",
            "action_title": "الإجراء الأول First procedure ",
            "behavior_type": "1",
            "behavior_group_title": "السلوكيات الايجيابية - Positive Behaviors ",
            "show_to_guardian": false,
            "date": "2017-08-08",
            "details": "You are awesome HERO",
            "attachment_id": null,
            "created_by": "6",
            "created_by_role": "Teacher",
            "created_by_full_name": "Peter   Jan",
            "school_id": "1",
            "semester_id": "1",
            "year_id": "1"
                                }
            }
        
## Group Reports
Resources related to Reports in the API.

## Compare General Schools Activation Records for Admin/Manager's Schools [/Reports/compare_activation_percentages?access_token=your_access_token]
An API function for admins and managers to show a comparison between the activation percentages in all current semesters of all the schools that belongs to them.

+ user_id : 100 (required, int) - Admin or Manager User id.
+ start : 2017-8-1 (date) - start date, default: one week from current date.
+ end : 2017-8-2 (date) - end date, default: current date.

### Compare Activation Percentages [GET]

+ Parameters :
    + user_id (int)
    + start  (date)
    + end   (date)
+ response 200 (application/json)

        [
            {
                "rank": 1,
                "school_id": 1,
                "school_name": "Classera Dummy School 1",
                "teachers_activation_percent": 66.67,
                "students_activation_percent": 100,
                "students_participation_percent": 2.94,
                "overall_activation_percent": 78.57
            },
            {
                "rank": 2,
                "school_id": 8,
                "school_name": "Classera Dummy School 2",
                "teachers_activation_percent": 0,
                "students_activation_percent": 0,
                "students_participation_percent": 0,
                "overall_activation_percent": 0
            }
        ]

## Supervisor Activation [/Reports/schadmin_tsupv_viewing_report?access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number)
    + start: 2017-1-1 (date)
    + end: 2017-1-2 (date)

### Supervisor Activation [GET]

This action allow you to generate reports about the supervisors activities in Classera from your website.

+ user_id: (int)
+ start: (date, format: YYYY-MM-DD)
+ end: (date, format: YYYY-MM-DD)
    
+ Response 200 (application/json)

        {"tsupv_viewing_data": {"data_count_for_tsupvs": {"100": {"assignments": 3,"preparations": 0,"attachments": 3}},"viewed_data_count_for_tsupvs": {"100": {"assignments": 2,"preparations": 0,"attachments": 1}}},"supervisors_names": {"100": "Supervisor Name"}}
    
## Group Years               
Resources related to behaviors in the API.

## Get year semester [/years/get_year_semesters?year_id=67&access_token=your_access_token]

+ Parameters :
    + year_id: 100 (required, number)
    
### Get Student Behaviors  [GET]

This action allows to get all semesters in a specific year

+ year_id (int) - year_id


+ Response 200 (application/json)

        ["87","987"]

## Get pioneer current semester and year ID [/years/get_pioneer_current_semester_year_id?school_refrence_id=67&access_token=your_access_token]

+ Parameters :
    + school_refrence_id: 100 (required, number)
    
### Get pioneer current semester and year ID  [GET]

This action allows to get current semesters in a specific year

+ school_refrence_id (int) - school_refrence_id


+ Response 200 (application/json)

        {"semester_id":"32","year_id":"35"}
        
## Group Stages               
Resources related to behaviors in the API.

## Get stage [/stages/get_stage?stage_id=67&access_token=your_access_token]

+ Parameters :
    + stage_id: 100 (required, number)
    
### Get stage Data  [GET]

This action allows to get stage data in the system

+ stage_id (int) - stage_id


+ Response 200 (application/json)

        {"id":"12","title":"\u0627\u0644\u0627\u0628\u062a\u062f\u0627\u0626\u064a","title_ara":null,"school_id":"8","type":"0","order":"0","created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00","pioneer_id":null,"school_pioneer_id":null}
        
## Get school stages [/stages/get_school_stages?school_id=67&access_token=your_access_token]

+ Parameters :
    + school_id: 100 (required, number) 
    
### Get school stages  [GET]

This action allows to get stage data in the system

+ school_id (int) - school_id


+ Response 200 (application/json)

        [{"Stage":{"id":"796","title":"test1221","title_ara":"","school_id":"211","type":"0","order":"0","created":"2015-10-29 12:16:52","modified":"2015-10-29 13:11:59","pioneer_id":"1231","school_pioneer_id":"12"},"School":{"id":null,"name":null,"english_name":null,"number":null,"address":null,"phone_number":null,"fax_number":null,"website":null,"school_group_id":null,"created":null,"logo":null,"prefix":null,"lang":null,"timezone":null,"date_format":null,"type":null,"registration_open":null,"modified":null,"city":null,"city_id":null,"pioneer_id":null},"Level":[],"ExpenseCategory":[]},{"Stage":{"id":"797","title":"test1","title_ara":"test","school_id":"211","type":"0","order":"0","created":"2015-10-29 13:05:54","modified":"2015-10-29 13:05:54","pioneer_id":"1231","school_pioneer_id":"12"},"School":{"id":null,"name":null,"english_name":null,"number":null,"address":null,"phone_number":null,"fax_number":null,"website":null,"school_group_id":null,"created":null,"logo":null,"prefix":null,"lang":null,"timezone":null,"date_format":null,"type":null,"registration_open":null,"modified":null,"city":null,"city_id":null,"pioneer_id":null},"Level":[],"ExpenseCategory":[]},{"Stage":{"id":"7096","title":"test1221","title_ara":"","school_id":"211","type":"0","order":"0","created":"2015-10-29 13:12:15","modified":"2015-10-29 13:12:15","pioneer_id":"1231","school_pioneer_id":"12"},"School":{"id":null,"name":null,"english_name":null,"number":null,"address":null,"phone_number":null,"fax_number":null,"website":null,"school_group_id":null,"created":null,"logo":null,"prefix":null,"lang":null,"timezone":null,"date_format":null,"type":null,"registration_open":null,"modified":null,"city":null,"city_id":null,"pioneer_id":null},"Level":[{"id":"1303","title":"test1221","title_ara":"","stage_id":"7096","type":"0","order":"0","created":"2015-10-29 13:45:14","modified":"2015-10-29 13:45:14","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":null},{"id":"1304","title":"test1221","title_ara":"","stage_id":"7096","type":"0","order":"0","created":"2015-10-29 13:45:26","modified":"2015-10-29 13:45:26","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":null},{"id":"1305","title":"test1221","title_ara":null,"stage_id":"7096","type":"0","order":"0","created":"2015-10-29 13:46:05","modified":"2015-10-29 13:46:05","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":null},{"id":"1306","title":"test12o21","title_ara":null,"stage_id":"7096","type":"0","order":"0","created":"2015-10-29 13:46:47","modified":"2015-10-29 15:44:00","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":"21"}],"ExpenseCategory":[]}]
 
## add stage [/stages/add?access_token=your_access_token]

### Add stage  [POST]

This action allows to get stage data in the system

+ title: 100 (required, string) 
+ title_arabic: 100 (required, string)
+ school_id : 100 (required, intger)



+ Response 200 (application/json)

        {"message":"The stage has been saved","id":12340}
        
## Pioneer add stage [/stages/pioneer_add?access_token=your_access_token]

### Pioneer add stage  [POST]

This action allows to get stage data in the system

+ title: primary  (required, string) 
+ title_arabic: المرحله الابتدائيه (required, string)
+ school_id: 100 (required, intger)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The stage has been saved","id":12340}
        
## Edit stage [/stages/edit?access_token=your_access_token]

### Edit stage  [POST]

This action allows to get stage data in the system
+ stage_id: 100 (required, string) - stage id
+ title: 100 (required, string) 
+ title_arabic: 100 (required, string)
+ school_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"The stage has been saved"}
        
## Pioneer edit stage [/stages/pioneer_edit?access_token=your_access_token]

### Pioneer edit stage  [POST]

This action allows to get stage data in the system

+ title: example (required, string) 
+ title_arabic: example (required, string)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The stage has been saved"}
        
## Group Levels               
Resources related to behaviors in the API.

## Get level [/levels/get_level?level_id=67&access_token=your_access_token]

+ Parameters :
    + level_id: 100 (required, number)
    
### Get level Data  [GET]

This action allows to get level data in the system

+ level_id (int) - level_id


+ Response 200 (application/json)

        {"id":"12","title":"\u0627\u0644\u0627\u0628\u062a\u062f\u0627\u0626\u064a","title_ara":null,"school_id":"8","type":"0","order":"0","created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00","pioneer_id":null,"school_pioneer_id":null}
        
## Get stage levels [/levels/get_stage_levels?stage_id=67&access_token=your_access_token]

+ Parameters :
    + stage_id: 100 (required, number)
    
### Get stage levels  [GET]

This action allows to get all levels in a stage

+ stage_id (int) - stage_id


+ Response 200 (application/json)

        [{"Level":{"id":"498","title":"\u0627\u0644\u0635\u0641 \u0627\u0644\u0623\u0648\u0644 \u0627\u0644\u062b\u0627\u0646\u0648\u064a","title_ara":null,"stage_id":"170","type":"0","order":"0","created":"2014-09-06 13:53:59","modified":"2014-09-06 13:53:59","pioneer_id":null,"school_pioneer_id":null,"stage_pioneer_id":null},"Stage":{"id":"170","title":"\u0627\u0644\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u062b\u0627\u0646\u0648\u064a\u0629","title_ara":null,"school_id":"173","type":"0","order":"0","created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00","pioneer_id":null,"school_pioneer_id":null},"Course":[],"Section":[{"id":"942","title":"1","title_ara":null,"level_id":"498","capacity":null,"type":"0","created":"2014-09-06 13:53:59","modified":"2014-09-06 13:53:59","pioneer_id":null,"school_pioneer_id":null,"stage_pioneer_id":null,"level_pioneer_id":null}],"StudentsLevel":[],"Student":[]}]

               
## Add level [/levels/add?access_token=your_access_token]

### Add level  [POST]

This action allows to add a new level

+ title: level 1 (required, string) 
+ title_arabic: الصف الاول (required, string)
+ stage_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"The level has been saved","id":12340}

## Pioneer add level [/levels/pioneer_add?access_token=your_access_token]

### Pioneer Add level  [POST]

This action allows to add a new level

+ title: level 1 (required, string) 
+ title_arabic: الصف الاول (required, string)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)
+ stage_pioneer_id: 100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The level has been saved","id":12340}        
               
## Edit level [/levels/edit?access_token=your_access_token]

### Edit level  [POST]

This action allows to edit level

+ level_id: 12 (required, intger) - level ID
+ title: level 1 (required, string) 
+ title_arabic: الصف الاول (required, string)
+ stage_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"The level has been saved"}

## Pioneer edit level [/levels/pioneer_edit?access_token=your_access_token]

### Pioneer edit level  [POST]

This action allows to edit level

+ title: level 1 (required, string) 
+ title_arabic: الصف الاول (required, string)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)
+ stage_pioneer_id: 100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The level has been saved"}    
        
## Edit assign student to level [/levels/edit_assign_student_to_level?access_token=your_access_token]

### Edit assign student to level  [POST]

This action allows to edit assigned student to level

+ user_id: 100 (required, int) 
+ level_id: 101 (required, int)
+ new_level_id: 102 (required, int)

+ Response 200 (application/json)

        {"message":"Student assigned to the level has been updated"}  
        
## Pioneer edit assign student to level [/levels/pioneer_edit_assign_student_to_level?access_token=your_access_token]

### Pioneer edit assign student to level  [POST]

This action allows to edit assigned student to level

+ government_id: 100 (required, int) 
+ user_pioneer_id: 101 (required, int)
+ level_pioneer_id: 100 (required, int) 
+ new_level_pioneer_id: 101 (required, int) 
+ school_pioneer_id: 100 (required, intger)
+ new_school_pioneer_id: 100 (required, intger)
+ stage_pioneer_id: 100 (required, intger)
+ new_stage_pioneer_id: 100 (required, intger)
+ level_pioneer_id: 100 (required, intger)
+ new_level_pioneer_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"Student assigned to the level has been updated"}    
        
## Group Sections               
Resources related to behaviors in the API.

## Get section [/sections/get_section?sectoin_id=67&access_token=your_access_token]

+ Parameters :
    + sectoin_id: 100 (required, number)
    
### Get section Data  [GET]

This action allows to get section data in the system

+ sectoin_id (int) - sectoin_id


+ Response 200 (application/json)

        {"id":"12","title":"\u0627\u0644\u0627\u0628\u062a\u062f\u0627\u0626\u064a","title_ara":null,"school_id":"8","type":"0","order":"0","created":"0000-00-00 00:00:00","modified":"0000-00-00 00:00:00","pioneer_id":null,"school_pioneer_id":null}

## Get level sections [/sections/get_level_sections?level_id=67&access_token=your_access_token]

+ Parameters :
    + level_id: 100 (required, number)
    
### Get level sections Data  [GET]

This action allows to get all sections in a specific stage

+ level_id (int) - level_id


+ Response 200 (application/json)

        [{"Section":{"id":"2742","title":"test12o21","title_ara":null,"level_id":"1306","capacity":null,"type":"0","created":"2015-10-29 15:44:19","modified":"2015-10-29 15:44:19","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":"21","level_pioneer_id":null},"Level":{"id":"1306","title":"test12o21","title_ara":null,"stage_id":"7096","type":"0","order":"0","created":"2015-10-29 13:46:47","modified":"2015-10-29 15:44:00","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":"21"},"Lecture":[],"StudentsSection":[],"Student":[]},{"Section":{"id":"2743","title":"rere","title_ara":"bebe","level_id":"1306","capacity":"20","type":"0","created":"2015-10-29 15:45:05","modified":"2015-10-29 17:14:51","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":"21","level_pioneer_id":"1"},"Level":{"id":"1306","title":"test12o21","title_ara":null,"stage_id":"7096","type":"0","order":"0","created":"2015-10-29 13:46:47","modified":"2015-10-29 15:44:00","pioneer_id":"1231","school_pioneer_id":"12","stage_pioneer_id":"21"},"Lecture":[],"StudentsSection":[],"Student":[]}]
               
## add section [/sections/add?access_token=your_access_token]

### Add section  [POST]

This action allows to add a new section

+ title: section 1 (required, string) 
+ title_arabic: الفصل الاول (required, string)
+ level_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"The section has been saved","id":12340}
        
## Pioneer add section [/sections/pioneer_add?access_token=your_access_token]

### Pioneer add section  [POST]

This action allows to add a new section

+ title: section 1 (required, string) 
+ title_arabic: الفصل الاول (required, string)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)
+ stage_pioneer_id: 100 (optional, intger)
+ level_pioneer_id:100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The section has been saved","id":12340}        
   
## edit section [/sections/edit?access_token=your_access_token]

### Edit section  [POST]

This action allows to edit section

+ section_id: 100 (required, intger)
+ title: section 2 (required, string) 
+ title_arabic: الفصل الاول (required, string)
+ level_id: 100 (required, intger)


+ Response 200 (application/json)

        {"message":"The section has been saved"}  

## Pioneer edit section [/sections/pioneer_edit?access_token=your_access_token]

### Pioneer edit section  [POST]

This action allows to edit section

+ title: section 2 (required, string) 
+ title_arabic: الفصل الاول (required, string)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)
+ stage_pioneer_id: 100 (optional, intger)
+ level_pioneer_id:100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The section has been saved"} 

## assign student to section [/sections/assign_student_to_section?access_token=your_access_token]

### Assign student to section  [POST]

This action allows to edit section

+ user_id: 100 (required, intger)
+ section_id: 200 (required, string) 

+ Response 200 (application/json)

        {"message":"The section has been saved"}      

## Pioneer assign student to section [/sections/pioneer_assign_student_to_section?access_token=your_access_token]

### Pioneer assign student to section  [POST]

This action allows to edit section

+ government_id: 100 (required, intger)
+ user_pioneer_id: 100 (required, intger)
+ section_pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)
+ stage_pioneer_id: 100 (optional, intger)
+ level_pioneer_id:100 (optional, intger)

+ Response 200 (application/json)

        {"message":"Student has been assigned to the section"}  
        
## Edit assign student to section [/sections/edit_assign_student_to_section?access_token=your_access_token]

### Edit assign student to section  [POST]

This action allows to edit section

+ user_id: 100 (required, intger)
+ section_id: 200 (required, string) 
+ new_section_id: 101 (required, string)

+ Response 200 (application/json)

        {"message":"The section has been saved"} 

## Pioneer edit assign student to section [/sections/pioneer_edit_assign_student_to_section?access_token=your_access_token]

### Pioneer edit assign student to section  [POST]

This action allows to edit section

+ government_id: 100 (required, intger)
+ user_pioneer_id: 100 (required, intger)
+ section_pioneer_id: 100 (required, int) 
+ new_section_pioneer_id: 101 (required, int) 
+ level_pioneer_id: 100 (required, int) 
+ new_level_pioneer_id: 101 (required, int) 
+ school_pioneer_id: 100 (required, intger)
+ new_school_pioneer_id: 100 (required, intger)
+ stage_pioneer_id: 100 (required, intger)
+ new_stage_pioneer_id: 100 (required, intger)
+ level_pioneer_id: 100 (required, intger)
+ new_level_pioneer_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"Student has been assigned to the section"}       

## Group Courses               
Resources related to courses in the API.

## Get student courses  [/courses/get_student_courses?user_id=10436&semester_id=32&access_token=your_access_token]

+ Parameters : 
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + semester_id: 100 (required, number) - Semester Id of the user in form of an integer
    
### Get Student Courses [GET]

This action allows to get all student courses in a specific semester 

+ user_id (int) - user_id
+ semester_id (int) - semester_id

+ Response 200 (application/json)

        ["status" => ( 0 = inprogress, 1 = success, -1 = failed) ]
        [{"Course":{"id":"818","title":"\u0631\u064a\u0627\u0636\u064a\u0627\u062a","icon":"course_math.png","type":false},"Lecture":{"id":"2323"},"CourseStatus":{"status":"0"}},{"Course":{"id":"834","title":"\u0627\u0644\u062d\u0627\u0633\u0628 \u0627\u0644\u0622\u0644\u064a","icon":"default","type":false},"Lecture":{"id":"1273"},"CourseStatus":{"status":"0"}},{"Course":{"id":"938","title":"\u0641\u064a\u0632\u064a\u0627\u0621","icon":"Slice-03.png","type":false},"Lecture":{"id":"873"},"CourseStatus":{"status":"0"}},{"Course":{"id":"1346","title":"\u0622\u062d\u064a\u0627\u0621","icon":"Slice-75.png","type":false},"Lecture":{"id":"1474"},"CourseStatus":{"status":"0"}},{"Course":{"id":"1347","title":"\u0622\u062d\u064a\u0627\u0621","icon":"course_science.png","type":false},"Lecture":{"id":"3482"},"CourseStatus":{"status":"0"}},{"Course":{"id":"1836","title":"English","icon":"Slice-28.png","type":false},"Lecture":{"id":"3486"},"CourseStatus":{"status":"0"}},{"Course":{"id":"3288","title":"Java course","icon":"course_science.png","type":true},"Lecture":{"id":"7923"},"CourseStatus":{"status":"-1"}},{"Course":{"id":"3289","title":"Bootstrap","icon":"exams.png","type":true},"Lecture":{"id":"7924"},"CourseStatus":{"status":"1"}},{"Course":{"id":"3293","title":"paython","icon":"audio_library.png","type":true},"Lecture":{"id":"7925"},"CourseStatus":{"status":"0"}}]
        
## View Course [/Courses/view_course_details?course_id=100&access_token=your_access_token]

+ Parameters :
    + course_id 100 (required, int)  - course ID

## View Course [GET] 

This action allow you to view a course

    + course_id (int)

+ Response 200 (application/json)

        {"Course":{"id":"100","title":"Math-101","title_ara":"\u0631\u064a\u0627\u0636\u064a\u0627\u062a","level_id":"1","school_id":"1","pass_grade":null,"max_grade":null,"participation_grade":null,"midterm_grade":null,"final_exam_grade":null,"lectures":"1","icon":"1474254281_calculator-pencil.png","external_url":null,"course_template_id":"3","type":"0","course_category_id":"128","order":"1","hide_in_grade_reports":false,"mawhiba_service_id":null,"created":"2017-06-23 00:02:16","modified":"2017-07-24 12:18:48","pioneer_id":null,"school_pioneer_id":null,"stage_pioneer_id":null,"level_pioneer_id":null,"credit_hours":null,"credit_value":"1.00","deleted":false}}

## Add course [/courses/add?access_token=your_access_token]

### Add course  [POST]

This action allows to add a new course

+ title: section 1 (required, string) 
+ title_arabic: الفصل الاول (required, string)
+ level_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"The course has been saved"}
   
## Pioneer add course [/courses/pioneer_add?access_token=your_access_token]

### Pioneer add course  [POST]

This action allows to add a new course

+ title: arabic course (required, string) 
+ title_arabic: arabic course (required, string)g)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)
+ stage_pioneer_id: 100 (optional, intger)
+ level_pioneer_id:100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The course has been saved"}
        
## Edit course [/courses/edit?access_token=your_access_token]

### Edit course  [POST]

This action allows to edit course

+ course_id: 100 (required, intger)
+ title: arabic course (required, string) 
+ title_arabic: arabic course (required, string)
+ level_id: 100 (required, intger)

+ Response 200 (application/json)

        {"message":"The course has been saved"}      
        
## Pioneer edit course [/courses/pioneer_edit?access_token=your_access_token]

### Pioneer edit course  [POST]

This action allows to edit course

+ title: section 2 (required, string) 
+ title_arabic: الفصل الاول (required, string)
+ pioneer_id: 100 (optional, intger)
+ school_pioneer_id: 100 (optional, intger)
+ stage_pioneer_id: 100 (optional, intger)
+ level_pioneer_id:100 (optional, intger)

+ Response 200 (application/json)

        {"message":"The course has been saved"} 
        
## Group Lectures              
Resources related to Lectures in the API.

## Add lecture [/lectures/add?access_token=your_access_token]

### Add lecture  [POST]

This action allows to add a new lecture

+ course_id:  121 (required, int) 
+ section_id:  1232 (required,int )
+ teacher_user_id: teacher_user_id 1001 (required, int)

+ Response 200 (application/json)

        {"message":"The teacher has been assigned"}
   
## Pioneer add lecture [/lectures/pioneer_add?access_token=your_access_token]

### Pioneer add lecture  [POST]

This action allows to edit a new lecture

+ course_pioneer_id:  1231 (required, int) 
+ section_pioneer_id:  872 (required,int )
+ user_pioneer_id: user_pioneer_id 1001 (required, int)
+ government_id: government_id 1001 (required, int)

+ Response 200 (application/json)

        {"message":"The teacher has been assigned"}
        
## Edit lecture [/lectures/edit?access_token=your_access_token]

### Edit lecture  [POST]

This action allows to edit lecture

+ lecture_id : 100 (required, int)
+ new_teacher_user_id: 120 (required, int) 

+ Response 200 (application/json)

        {"message":"The lecture has been saved"}      
        
## Pioneer edit lecture [/lectures/pioneer_edit?access_token=your_access_token]

### Pioneer edit lecture  [POST]

This action allows to edit lecture by only assign it to anew teacher

+ user_pioneer_id: 120 (required, int) 
+ government_id: 1240 (required, int) 
+ course_pioneer_id: 1210 (required, int) 
+ section_pioneer_id: 1210 (required, int) 

+ new_user_pioneer_id: 1120 (required, int) 
+ new_government_id: 1210 (required, int) 

+ Response 200 (application/json)

        {"message":"The lecture has been saved"} ## Pioneer edit lecture [/lectures/pioneer_edit?access_token=your_access_token]
        
## Pioneer delete lecture [/lectures/pioneer_delete?access_token=your_access_token]
### Pioneer delete lecture  [POST]

This action allows to delete lecture that doesn't have any attachments or assignments 

+ user_pioneer_id: 120 (required, int) 
+ government_id: 1240 (required, int) 
+ course_pioneer_id: 1210 (required, int) 
+ section_pioneer_id: 1210 (required, int) 

+ Response 200 (application/json)

        {"status":200,"message":"Lecture has been deleted"}
        request faild
        {"status":406,"message":"The lecture could not be deleted because there are attachments and assignments related to it. you can not delete it throw the API"}

## View Lecture [/Lectures/view_lecture_details?lecture_id=100&access_token=your_access_token]

+ Parameters :
    + lecture_id 100 (required, int)

## View lecture [GET] 

This action allow you to view a lecture

    + lecture_id (int)

+ Response 200 (application/json)

        {"Lecture":{"id":"100","section_id":"1","course_id":"2","teacher_id":"1","year_id":"1","semester_id":"1","language":null,"type":"0","country":"0","city":"0","location":null,"date_from":"0000-00-00","date_to":"0000-00-00","course_duration":"0","hours_number":"0","duration_from":"00:00:00","duration_to":"00:00:00","gender":false,"course_type":false,"open_registration":"0","allow_anonymous_registration":false,"registration_from":"0000-00-00 00:00:00","registration_to":"0000-00-00 00:00:00","capacity":"0","course_fees":null,"total_cost":null,"target_users":"","required_courses":null,"course_conditions":null,"total_points":"100","created":"2017-07-05 19:30:09","modified":"2017-07-10 20:54:55","deleted":false}}

## Group Scores

Resources related to Top Scores of students, teachers and sections.

## Get Top Sections Scores [/scores/top_sections_scores?access_token=your_access_token&limit=4&user_id=31]

### Get Top Sections Scores [GET]

This action returns top sections scores.

+ user_id (int , required) - user ID.
+ limit (int , required) - limit.


+ Response 200 (application/json)

        [
            {
                "id": "1",
                "title": "Grade 7 - A",
                "stage_title": " Intermediate ",
                "average": 1000
            },
            {
                "id": "2",
                "title": "Grade 7 - ب",
                "stage_title": " Intermediate ",
                "average": 0
            }
        ]


## Get Top Students Scores in School [/scores/top_scores_students_school?access_token=your_access_token&limit=3&user_id=31]

### Get Top Students Scores in School [GET]

This action returns top students scores in school.

+ user_id (int , required) - user ID.
+ limit (int , required) - limit.


+ Response 200 (application/json)

        [
            {
                "User": {
                    "id": "39",
                    "username": "clss0019",
                    "school_id": "1",
                    "full_name": "Abody yousef ashour Kash"
                },
                "LatestScore": {
                    "score": 3000
                },
                "Level": {
                    "title": "Grade 7"
                }
            },
            {
                "User": {
                    "id": "33",
                    "username": "clss0012",
                    "school_id": "1",
                    "full_name": "Medo   Justin"
                },
                "LatestScore": {
                    "score": 2000
                },
                "Level": {
                    "title": "Grade 7"
                }
            },
            {
                "User": {
                    "id": "34",
                    "username": "clss0011",
                    "school_id": "1",
                    "full_name": "mohammed jamal aziz janbi"
                },
                "LatestScore": {
                    "score": 1000
                },
                "Level": {
                    "title": "Grade 7"
                }
            }
        ]


## Get Top Students Scores in School Group [/scores/top_scores_students_schoolgroup?access_token=your_access_token&limit=3&user_id=31]

### Get Top Students Scores in School Group [GET]

This action returns top students scores in school Group.

+ user_id (int , required) - user ID.
+ limit (int , required) - limit.


+ Response 200 (application/json)

        [
            {
                "User": {
                    "id": "39",
                    "username": "clss0019",
                    "school_id": "1",
                    "full_name": "Abody yousef ashour Kash"
                },
                "LatestScore": {
                    "score": 3000
                },
                "School": {
                    "school_group_id": "1",
                    "name": "Classera"
                }
            },
            {
                "User": {
                    "id": "33",
                    "username": "clss0012",
                    "school_id": "1",
                    "full_name": "Medo   Justin"
                },
                "LatestScore": {
                    "score": 2000
                },
                "School": {
                    "school_group_id": "1",
                    "name": "Classera"
                }
            },
            {
                "User": {
                    "id": "34",
                    "username": "clss0011",
                    "school_id": "1",
                    "full_name": "mohammed jamal aziz janbi"
                },
                "LatestScore": {
                    "score": 1000
                },
                "School": {
                    "school_group_id": "1",
                    "name": "Classera"
                }
            }
        ]


## Get Top Students Scores in Classera ME [/scores/top_scores_students_ME?access_token=your_access_token&limit=3&user_id=31]

### Get Top Students Scores in Classera ME [GET]

This action returns top students scores in Classera ME.

+ user_id (int , required) - user ID.
+ limit (int , required) - limit.


+ Response 200 (application/json)

        [
            {
                "User": {
                    "id": "39",
                    "username": "clss0019",
                    "school_id": "1",
                    "full_name": "Abody yousef ashour Kash"
                },
                "LatestScore": {
                    "score": 3000
                },
                "School": {
                    "name": "Classera"
                }
            },
            {
                "User": {
                    "id": "33",
                    "username": "clss0012",
                    "school_id": "1",
                    "full_name": "Medo   Justin"
                },
                "LatestScore": {
                    "score": 2000
                },
                "School": {
                    "name": "Classera"
                }
            },
            {
                "User": {
                    "id": "34",
                    "username": "clss0011",
                    "school_id": "1",
                    "full_name": "mohammed jamal aziz janbi"
                },
                "LatestScore": {
                    "score": 1000
                },
                "School": {
                    "name": "Classera"
                }
            }
        ]


## Get Top Teachers Scores in School [/scores/top_scores_teachers?access_token=your_access_token&limit=3&user_id=31]

### Get Top Teachers Scores in School [GET]

This action returns top teachers scores in school.

+ user_id (int , required) - user ID.
+ limit (int , required) - limit.


+ Response 200 (application/json)

        [
            {
                "User": {
                    "id": "41",
                    "username": "clst0003",
                    "school_id": "1",
                    "full_name": "Abody   Kashgary"
                },
                "LatestScore": {
                    "score": 5000
                }
            }
        ]

## Get Top Teachers Scores in School Group [/scores/top_scores_teachers_schoolgroup?access_token=your_access_token&limit=3&user_id=31]

### Get Top Teachers Scores in School Group [GET]

This action returns top teachers scores in school Group.

+ user_id (int , required) - user ID.
+ limit (int , required) - limit.


+ Response 200 (application/json)

        [
            {
                "User": {
                    "id": "41",
                    "username": "clst0003",
                    "school_id": "1",
                    "full_name": "Abody   Kashgary"
                },
                "LatestScore": {
                    "score": 5000
                },
                "School": {
                    "school_group_id": "1",
                    "name": "Classera"
                }
            }
        ]


## Get Top Teachers Scores in Classera ME [/scores/top_scores_teachers_ME?access_token=your_access_token&limit=3&user_id=31]

### Get Top Teachers Scores in Classera ME [GET]

This action returns top Teachers scores in Classera ME.

+ user_id (int , required) - user ID.
+ limit (int , required) - limit.


+ Response 200 (application/json)

        [
            {
                "User": {
                    "id": "41", 
                    "username": "clst0003",
                    "school_id": "1",
                    "full_name": "Abody   Kashgary"
                },
                "LatestScore": {
                    "score": 5000
                },
                "School": {
                    "name": "Classera"
                }
            }
        ]



## Group Assessments
Resources related to users assessment in the API.

## Get assessments  [/Assessments/get_assessments?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### Get Assessments [GET]
This action allows to get user assessments.

+ user_id (int) - user_id


+ Response 200 (application/json)

        [
            {
                "success": "1",
                "message": "Contact Information Updated"
            }
        ] 
    
## Get Assessment Detail  [/Assessments/get_assessment_detail?user_id=100&assessment_id=1833&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assessment_id: 1833 (required, number) - ID for assessment

### Get assessment detail [GET]
This action allows to get  assessments detail.

+ user_id (int) - user_id
+ assessment_id (int) - assessment_id

+ Response 200 (application/json)
        
        {"assessment_grade": [{"AssessmentGrade": {"id": "61093","assessment_id": "1833","item_id": "8556","indicator_id": "39582","student_id": "30743","level": "( 1 / 5 ) 35%","comment": "","assessment_type_id": "3","indicator_title": "جودة المحتوى المقدم واعتماده على مراجع موثوقة","assessment_item_title": "Reading Skills"}},{"AssessmentGrade": {"id": "61094","assessment_id": "1833","item_id": "8556","indicator_id": "39585","student_id": "30743","level": "( 1 / 5 ) 35%","comment": "","assessment_type_id": "3","indicator_title": "الإستعانة بصور ونماذج توضيحية","assessment_item_title": "Reading Skills"}}  ],"mark": "100","student_mark": 100,"percentage": 100}
        

## Admin Publish Survey [/assessments/schadmin_publish_survey?access_token=your_access_token]
This action publishes a target assessment.
### Publish Survey [POST]

+ user_id (int, required) - Admin User id.
+ evaluatees_type (int, required) - 0 (general), 1 (Course), 2 (School), 3 (User)
+ evaluators_roles (int, required) - target evaluators' roles. e.g. 2,3,4,5,6,7,8,14,60
+ assessment_id (int, required) - target assessment id.
+ show_tsupv_his_teachers (boolean) - Teacher supervisor can view his teachers.
+ evaluators_users (int) - User ids of evaluators. e.g. 1,2,3,4,5
+ evaluator_school (int) - School ids of evaluators' schools. e.g. 1,2,3,4,5
+ evaluate_schools (int, conditionally required) - School ids under evaluation, needed when evaluatees_type = 2.
+ evaluate_lectures (int, conditionally required) - Lecture ids under evaluation, needed when evaluatees_type = 1.
+ evaluatees_school (int, conditionally required) - School ids of evaluatees' users under evaluation, needed when evaluatees_type = 3.
+ evaluatees_roles (int, conditionally required) - role ids of evaluatees' users under evaluation, needed when evaluatees_type = 3.
+ evaluatees_users (int, conditionally required) - user ids of evaluatees' users under evaluation, needed when evaluatees_type = 3.

+ Response 200 (application/json)

        {"success":"1","success message":"The survey has been published"}
        
## Evaluate Assessment  [/Assessments/survey_evaluatees?access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + form_data:  [{"type": "rubric", "result": {"item_id": "lvl-indicator_id"},"comment": {"item_id": "COMMENT"},"Assessment": {"refrence": "publishing_type","refrence_id": "evaluation_target","assessment_id": "assessment_id"}}] (required, String in JSON format) - Evaluation form data.

### Evaluate Assessment [POST]
This action allows to evaluate an assessment.

+ user_id (int) - user_id
+ form_data (String) - form_data

+ Response 200 (application/json)
        
        {"success" : "1", "success message" : "Your evaluation has been saved" }
        

## Compare with other evaluatees  [/Assessments/compare_evalutees?access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User id of the function user.
    + assessment_id:  (required, number) - Assessment id of the assessment under comparison.
    + compared_assessments: (required, number) - target evaluatee user id.
    
### Compare with other evaluatees [POST]
this action allows to compare a target evaluatee with other evaluatees under the same assessment.

+ user_id (int)
+ assessment_id (int)
+ compared_assessments (int)

+ Response 200 (application/json)
        
        {
            "assessment": {
                "Assessment": {
                    "id": "28",
                    "is_survey": "1",
                    "is_template": "0",
                    "parent_id": null,
                    "title": "API Test 9",
                    "course_template_id": null,
                    "school_id": "1",
                    "created_by": "31",
                    "description": "Made by API function",
                    "notes": null,
                    "assessment_type_id": "1",
                    "assessment_task_id": null,
                    "levels": "3",
                    "purpose": null,
                    "mark": "100",
                    "grade_category_id": null,
                    "semester_id": "1",
                    "course_id": null,
                    "allow_multiple_evaluations": false,
                    "allow_delete_evaluation": true,
                    "allow_evaluatees_show_result": true,
                    "deleted": "0",
                    "not_able_to_delete": false,
                    "show_indicators_in_teacher_report": true,
                    "close_evaluation": null,
                    "modified": "2017-08-21 10:05:55",
                    "created": "2017-08-21 10:05:55"
                }
            },
            "current_evalutee": "mohammed jamal aziz janbi",
            "evaluatee_users": [
                {
                    "User": {
                        "id": "39",
                        "first_name": "Abod",
                        "father_name": "",
                        "grandfather_name": "",
                        "family_name": "Kashgary"
                    },
                    "School": {
                        "name": "classera2"
                    }
                },
                {
                    "User": {
                        "id": "31",
                        "first_name": "Classera",
                        "father_name": "",
                        "grandfather_name": "",
                        "family_name": "Trainee"
                    },
                    "School": {
                        "name": "classera2"
                    }
                }
            ],
            "selected_refrences": [
                "31"
            ],
            "all_assessment_items": [
                {
                    "AssessmentItem": {
                        "id": "23",
                        "assessment_id": "28",
                        "title": "t9_item",
                        "parent_id": null,
                        "weight": "100",
                        "created": "2017-08-23 09:10:35",
                        "modified": "2017-08-23 09:10:35",
                        "deleted": "0",
                        "percentage": 133.34,
                        "indicators": [
                            {
                                "AssessmentItemIndicator": {
                                    "id": "35",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:10:52",
                                    "modified": "2017-08-23 09:10:52",
                                    "deleted": "0",
                                    "percentage": 0
                                }
                            },
                            {
                                "AssessmentItemIndicator": {
                                    "id": "36",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator2",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:13:10",
                                    "modified": "2017-08-23 09:13:10",
                                    "deleted": "0",
                                    "percentage": 133.34
                                }
                            },
                            {
                                "AssessmentItemIndicator": {
                                    "id": "37",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator3",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:13:22",
                                    "modified": "2017-08-23 09:13:22",
                                    "deleted": "0",
                                    "percentage": 0
                                }
                            }
                        ]
                    }
                }
            ],
            "all_assessment_percentage": 133.34,
            "all_assessments": {
                "Assessment": {
                    "id": "28",
                    "is_survey": "1",
                    "is_template": "0",
                    "parent_id": null,
                    "title": "API Test 9",
                    "course_template_id": null,
                    "school_id": "1",
                    "created_by": "31",
                    "description": "Made by API function",
                    "notes": null,
                    "assessment_type_id": "1",
                    "assessment_task_id": null,
                    "levels": "3",
                    "purpose": null,
                    "mark": "100",
                    "grade_category_id": null,
                    "semester_id": "1",
                    "course_id": null,
                    "allow_multiple_evaluations": false,
                    "allow_delete_evaluation": true,
                    "allow_evaluatees_show_result": true,
                    "deleted": "0",
                    "not_able_to_delete": false,
                    "show_indicators_in_teacher_report": true,
                    "close_evaluation": null,
                    "modified": "2017-08-21 10:05:55",
                    "created": "2017-08-21 10:05:55"
                }
            },
            "all_evaluators_count": 1,
            "assessment_items": [
                {
                    "AssessmentItem": {
                        "id": "23",
                        "assessment_id": "28",
                        "title": "t9_item",
                        "parent_id": null,
                        "weight": "100",
                        "created": "2017-08-23 09:10:35",
                        "modified": "2017-08-23 09:10:35",
                        "deleted": "0",
                        "percentage": 133.34,
                        "indicators": [
                            {
                                "AssessmentItemIndicator": {
                                    "id": "35",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:10:52",
                                    "modified": "2017-08-23 09:10:52",
                                    "deleted": "0",
                                    "percentage": 0
                                }
                            },
                            {
                                "AssessmentItemIndicator": {
                                    "id": "36",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator2",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:13:10",
                                    "modified": "2017-08-23 09:13:10",
                                    "deleted": "0",
                                    "percentage": 133.34
                                }
                            },
                            {
                                "AssessmentItemIndicator": {
                                    "id": "37",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator3",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:13:22",
                                    "modified": "2017-08-23 09:13:22",
                                    "deleted": "0",
                                    "percentage": 0
                                }
                            }
                        ]
                    }
                }
            ],
            "assessment_percentage": 133.34,
            "evaluators_count": 1
        }   
        
## Evaluation detailed report  [/Assessments/schadmin_survey_detailed_result_report?access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User id of the function user.
    + assessment_id:  (required, number) - Assessment id of the assessment under comparison.
    + reference_id: (required, number) - assessment evaluatee reference id.
    + reference_table: (required, String) - 'users', 'lectures' or 'schools'.
        
### Evaluation detailed report [GET]
this action allows to view survey detailed report.

+ user_id (int)
+ assessment_id (int)
+ reference_id (int)
+ reference_table (string)

+ Response 200 (application/json)
        
        {
            "assessment_items": [
                {
                    "AssessmentItem": {
                        "id": "23",
                        "assessment_id": "28",
                        "title": "t9_item",
                        "parent_id": null,
                        "weight": "100",
                        "created": "2017-08-23 09:10:35",
                        "modified": "2017-08-23 09:10:35",
                        "deleted": "0",
                        "percentage": 133.34,
                        "indicators": [
                            {
                                "AssessmentItemIndicator": {
                                    "id": "35",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:10:52",
                                    "modified": "2017-08-23 09:10:52",
                                    "deleted": "0",
                                    "percentage": 0
                                }
                            },
                            {
                                "AssessmentItemIndicator": {
                                    "id": "36",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator2",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:13:10",
                                    "modified": "2017-08-23 09:13:10",
                                    "deleted": "0",
                                    "percentage": 133.34
                                }
                            },
                            {
                                "AssessmentItemIndicator": {
                                    "id": "37",
                                    "assessment_item_id": "23",
                                    "title": "t9_item1_indicator3",
                                    "parent_id": null,
                                    "created": "2017-08-23 09:13:22",
                                    "modified": "2017-08-23 09:13:22",
                                    "deleted": "0",
                                    "percentage": 0
                                }
                            }
                        ]
                    }
                }
            ],
            "assessment_percentage": 133.34,
            "assessment": {
                "Assessment": {
                    "id": "28",
                    "is_survey": "1",
                    "is_template": "0",
                    "parent_id": null,
                    "title": "API Test 9",
                    "course_template_id": null,
                    "school_id": "1",
                    "created_by": "31",
                    "description": "Made by API function",
                    "notes": null,
                    "assessment_type_id": "1",
                    "assessment_task_id": null,
                    "levels": "3",
                    "purpose": null,
                    "mark": "100",
                    "grade_category_id": null,
                    "semester_id": "1",
                    "course_id": null,
                    "allow_multiple_evaluations": false,
                    "allow_delete_evaluation": true,
                    "allow_evaluatees_show_result": true,
                    "deleted": "0",
                    "not_able_to_delete": false,
                    "show_indicators_in_teacher_report": true,
                    "close_evaluation": null,
                    "modified": "2017-08-21 10:05:55",
                    "created": "2017-08-21 10:05:55"
                }
            },
            "evaluators_count": 1
        }
        
## Entered Evaluations  [/Assessments/users_who_evaluate?access_token=your_access_token]

+ Parameters :
+ user_id: (required, number) - User id of the function user.
+ assessment_id: (required, number) - Assessment id of the assessment under comparison.
+ reference_id: (required, number) - assessment evaluatee reference id.
+ reference_table: (required, String) - 'users', 'lectures' or 'schools'.
    
### Entered Evaluations [GET]
this action allows to view entered evaluations.

+ user_id (int)
+ assessment_id (int)
+ reference_id (int)
+ reference_table (string)

+ Response 200 (application/json)

        [
            {
                "User": {
                    "id": "6",
                    "first_name": "Peter",
                    "father_name": "",
                    "grandfather_name": "",
                    "family_name": "Jan",
                    "school_id": "1"
                },
                "School": {
                    "name": "classera2",
                    "english_name": "Classera"
                }
            },
            {
                "User": {
                    "id": "31",
                    "first_name": "Classera",
                    "father_name": "",
                    "grandfather_name": "",
                    "family_name": "Trainee",
                    "school_id": "1"
                },
                "School": {
                    "name": "classera2",
                    "english_name": "Classera"
                }
            },
            {
                "User": {
                    "id": "41",
                    "first_name": "Abody",
                    "father_name": "",
                    "grandfather_name": "",
                    "family_name": "Kashgary",
                    "school_id": "1"
                },
                "School": {
                    "name": "classera2",
                    "english_name": "Classera"
                },
                "has_evaluation": 1
            }
        ]
    
    
        
## Group Indicetors
Resources related to assessment indicators in the API.

## Add Indicators  [/assessmentItemIndicators/add?access_token=your_access_token]


### Add Indicators [POST]
This action allows to add indicator.

+ assessment_item_id (int) - assessment_item_id
+ title (string) - title
+ type (string) - type (survey) 


+ Response 200 (application/json)

        {
            "success": "1",
            "success_message": "The item indicator has been saved"
        }
        
## Edit Indicators  [/assessmentItemIndicators/edit?access_token=your_access_token]


### Edit Indicators [POST]
This action allows to edit indicator.

+ id (int) - id
+ title (string) - title


+ Response 200 (application/json)

        {
            "success": "1",
            "success_message": "Your indicator has been edited"
        } 

## View Indicators  [/assessmentItemIndicators/View?access_token=your_access_token&id=1]


### View Indicators [GET]
This action allows to view indicator.

+ id (int) - id



+ Response 200 (application/json)

        {
            "assessmentItemIndicator": {
                "id": "11",
                "assessment_item_id": "1",
                "title": "",
                "parent_id": null,
                "created": "2017-08-20 14:28:40",
                "modified": "2017-08-20 14:28:40",
                "deleted": "1"
            }
        } 
        
        
## Delete Indicators  [/assessmentItemIndicators/delete?&access_token=your_access_token&id=1]


### Delete Indicators [GET]
This action allows to delete indicator.

+ id (int) - id


+ Response 200 (application/json)

        {
            "success": "1",
            "message": "item indicator deleted"
        }
        

  


## Group Grades
Resources related to users Grades in the API.

## Get student grade  [/Grades/get_student_grade?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### Get student grade [GET]
This action allows to get student  grade.

+ user_id (int) - user_id


+ Response 200 (application/json)

        {"Math-101": [{"id": 777079,"title": "مشاركة","points": "100","children": [{"id": 840071,"title": "مشاركة","points": "100","children": [],"transcript_attribute_id": null,"lecture_id": "30445","grade": null}],"transcript_attribute_id": null,"lecture_id": "30445","grade": 0},{"id": 777078, "title": "مشاركة","points": "100","children": [],"transcript_attribute_id": null, "lecture_id": "30445","grade": "5"}]}
        

## Update grade notification [/Grades/update_grade_notif?access_token=your_access_token]

### Update grade notif  [POST]
This action allows to update read status. 

+ user_id: 100 (required, intger) 
+ grade_id: 100 (required, intger)

+ Response 200 (application/json)    

## Group Discussions
Resources related to user Discussions in the API.

## Get student discussions  [/Discussions/get_student_discussions?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### Get student discussions [GET]
This action allows to get student discussions .

+ user_id (int) - user_id


+ Response 200 (application/json)

        [{"PostsUserView": {"id": "4413850","post_title": "انواع الاسماك","full_name": "Tom Friedman","post_created": "2016-07-17 11:34:52"}}]

## Search Student Discussion [/Discussions/search_student_discussion?user_id=12&text=Creative&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
    + text : hi (optional, string) - Title of discussions
   
###Search Student Discussion [GET]

This action allows to user search in discussion

+ user_id (int) - user_id
+ text (string) - text

+ Response 200 (application/json)

        [{"PostsUserView": {"id": "99287","post_title": "Creative Ideas","full_name": "Tom Friedman","post_created": "2016-08-29 15:35:24"}}]

## Get discussion post  [/Discussions/get_discussion_post?user_id=100&post_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + post_id: 100 (required, number) - ID of the post

### Get discussion post [GET]
This action allows to get student post discussions .

+ user_id (int) - user_id
+ post_id (int) - post_id

+ Response 200 (application/json)

        [{"PostsUserView":{"id":"4413858","post_title":"","full_name":"Tom Friedman","post_created":"2016-02-02 13:46:32","post_parentid":"4413850"}}]
 
## Search Discussion Post [/Discussions/search_discussion_post?user_id=12&text=Tom&post_id=125&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - User ID  in form of an integer
    + text : hi (optional, string) - Title of discussions
    + post_id : 125 (optional, number) - post id for discussions
###Search Discussion Post [GET]

This action allows to user search in discussion

+ user_id (int) - user_id
+ text (string) - text
+ post_id (int) - post_id

+ Response 200 (application/json) 

        {"PostsUserView": {"id": "125","post_title": "Creative Ideas","full_name": "Tom Friedman","post_created": "2016-08-29 15:35:24"} 
        
## Get discussion details [/Discussions/get_discussion_details?user_id=100&post_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + post_id: 100 (required, number) - ID of the post

### Get discussion details [GET]
This action allows to get student post discussion details .

+ user_id (int) - user_id
+ post_id (int) - post_id

+ Response 200 (application/json)

        [{"PostsUserView":{"id":"4413850","post_title":"\u0627\u0646\u0648\u0627\u0639 \u0627\u0644\u0627\u0633\u0645\u0627\u0643","full_name":"Tom Friedman","post_created":"2016-07-17 11:34:52","post_text":"\u0627\u0644\u0627\u0633\u0645\u0627\u0643","post_parentid":"0"},"User":{"id":"78934","first_name":"Tom","family_name":"Friedman","image_url":"https:\/\/s3.amazonaws.com\/classera\/111\/profilepic\/thumb_130\/78934.jpg?response-content-disposition=attachment%3Bfilename%3D%2293105f8e5b940e2b2ed489ffae17da2d.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468848467&Signature=oY7S61pA8mQBZ08KnGVQI5cirLA%3D"}}]  
        

## Get discussion comment [/Discussions/get_discussion_comment?user_id=100&post_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + post_id: 100 (required, number) - ID of the post

### Get discussion comment [GET]
This action allows to get discussion comments .

+ user_id (int) - user_id
+ post_id (int) - post_id

+ Response 200 (application/json)

        {"comment":[{"Post":{"id":"4413858","created":"2016-02-02 13:46:32","post":"\r\n\thttps:\/\/s3.amazonaws.com\/classera-ck2\/111\/images\/1454409884_Prophet Muhammad (SAWS).pptx\r\n"},"User":{"id":"78934","first_name":"Tom","family_name":"Friedman","image_url":"https:\/\/s3.amazonaws.com\/classera\/111\/profilepic\/thumb_130\/78934.jpg?response-content-disposition=attachment%3Bfilename%3D%2293105f8e5b940e2b2ed489ffae17da2d.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468848653&Signature=whr8ivkjEKnmi%2BHl20uA0dLBu3Q%3D"}}],"count":1}
        
## Add discussion comment [/Discussions/add_discussion_comment?access_token=your_access_token]

### Add discussion comment [POST]
This action allows to Add discussion comment. 

+ user_id: 100 (required, intger) 
+ post_id: 100 (required, intger) 
+ text: "hi" (required, string)
 
+ Response 200 (application/json)
  
        {"message": "Success Insert comment"}   
        
        
## Get Teacher discussions  [/posts/teacher_discussion/?access_token=your_access_token&user_id=2]

+ Parameters :
    + user_id: 100 (required, number) - ID of the teacher in form of an integer

### Get Teacher discussions [GET]
This action allows supervisor to get teacher's discussions .

+ user_id (int) - user_id


+ Response 200 (application/json)

        Array
        (
            [0] => Array
                (
                    [Posts] => Array
                        (
                            [id] => 1
                            [title] => المشاريع
                            [post] => المشاريع التي تختص بمادة العلوم 
                            [user_id] => 6
                            [created] => 2017-07-10 21:21:36
                            [comments_count] => 2
                        )
        
                    [user] => Array
                        (
                            [id] => 6
                            [username] => clst0002
                            [password] => 7c6815995b46a0e525635b43abb6b6509c46ab4d
                            [notification_settings] => 0
                            [created] => 2017-07-03 14:05:41
                            [modified] => 2017-07-25 16:12:23
                            [role_id] => 4
                            [school_id] => 1
                            [main_account_id] => 
                            [first_name] => Peter
                            [father_name] => 
                            [grandfather_name] => 
                            [family_name] => Jan
                            [name_ara] => بيتر جان
                            [guardian_id] => 
                            [father_mobile] => 
                            [mother_mobile] => 
                            [date_of_birth] => 2017-07-03
                            [place_of_birth] => 
                            [place_of_birth_ara] => 
                            [place_of_birth_country] => 
                            [address] => 
                            [phone_number] => 
                            [mobile_number] => 
                            [email] => 
                            [verified_email] => 
                            [email2] => 
                            [nationality_id] => 1
                            [dob_hijri] => 
                            [photo_filename] => 
                            [theme_id] => 1
                            [deleted] => 
                            [status_id] => 1
                            [lang] => eng
                            [date_format] => 0
                            [login_name] => 
                            [google_token] => 
                            [google_login_token] => 
                            [number] => 999125347199
                            [valid_number] => 1
                            [passport_number] => 
                            [old_school_id] => 
                            [gender] => 0
                            [block_reports] => 
                            [mawhiba_id] => 
                            [pioneer_id] => 
                            [bio] => 
                            [facebook_account] => 
                            [twitter_account] => 
                            [google_plus_account] => 
                            [instagram_account] => 
                            [linkedin_account] => 
                            [mobile_number2] => 
                            [educational_administration] => 
                            [external_school] => 
                            [tmp_section_id] => 
                            [level_pioneer_id] => 
                            [section_pioneer_id] => 
                            [parent_pioneer_id] => 
                            [thumb_done] => 0
                            [android_token] => 
                            [ios_token] => 
                            [restrict_login] => 
                            [mawhiba_program_id] => 
                            [last_activity_date] => 2017-07-12 09:13:52
                            [fake_data] => 
                            [duplicated] => 
                            [scholarship_number] => 
                        )
        
                )
        
            [1] => Array
                (
                    [Posts] => Array
                        (
                            [id] => 4
                            [title] => الغرفة العجيبة
                            [post] => 
                            [user_id] => 6
                            [created] => 2017-08-08 15:59:25
                            [comments_count] => 0
                        )
        
                    [user] => Array
                        (
                            [id] => 6
                            [username] => clst0002
                            [password] => 7c6815995b46a0e525635b43abb6b6509c46ab4d
                            [notification_settings] => 0
                            [created] => 2017-07-03 14:05:41
                            [modified] => 2017-07-25 16:12:23
                            [role_id] => 4
                            [school_id] => 1
                            [main_account_id] => 
                            [first_name] => Peter
                            [father_name] => 
                            [grandfather_name] => 
                            [family_name] => Jan
                            [name_ara] => بيتر جان
                            [guardian_id] => 
                            [father_mobile] => 
                            [mother_mobile] => 
                            [date_of_birth] => 2017-07-03
                            [place_of_birth] => 
                            [place_of_birth_ara] => 
                            [place_of_birth_country] => 
                            [address] => 
                            [phone_number] => 
                            [mobile_number] => 
                            [email] => 
                            [verified_email] => 
                            [email2] => 
                            [nationality_id] => 1
                            [dob_hijri] => 
                            [photo_filename] => 
                            [theme_id] => 1
                            [deleted] => 
                            [status_id] => 1
                            [lang] => eng
                            [date_format] => 0
                            [login_name] => 
                            [google_token] => 
                            [google_login_token] => 
                            [number] => 999125347199
                            [valid_number] => 1
                            [passport_number] => 
                            [old_school_id] => 
                            [gender] => 0
                            [block_reports] => 
                            [mawhiba_id] => 
                            [pioneer_id] => 
                            [bio] => 
                            [facebook_account] => 
                            [twitter_account] => 
                            [google_plus_account] => 
                            [instagram_account] => 
                            [linkedin_account] => 
                            [mobile_number2] => 
                            [educational_administration] => 
                            [external_school] => 
                            [tmp_section_id] => 
                            [level_pioneer_id] => 
                            [section_pioneer_id] => 
                            [parent_pioneer_id] => 
                            [thumb_done] => 0
                            [android_token] => 
                            [ios_token] => 
                            [restrict_login] => 
                            [mawhiba_program_id] => 
                            [last_activity_date] => 2017-07-12 09:13:52
                            [fake_data] => 
                            [duplicated] => 
                            [scholarship_number] => 
                        )
        
                )
        
        )
    
    
## Group Assignments
Resources related to user Assignments in the API.

## Get student exams list  [/Assignments/get_student_exams_list?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### Get student exams list [GET]
This action allows to get student exams list .

+ user_id (int) - user_id

+ Response 200 (application/json)

            {"data":[{"Assignment":{"id":"668575","title":"YARE","created":"2016-06-30 12:58:39","due_datetime":"2016-07-08 14:55:00","cutoff_datetime":"2016-07-09 13:55:00","allow_multiple_submissions":false,"accept_submission_attachment":false,"issue_certificates":false,"exam_for_training_course":false,"assessment_id":null,"submission_id":null,"course_title":"Math-101","course_id":"7127","status":"Missed"}}],"avaliable_courses":[{"Course":{"id":"5567","title":"Science"}}]}
 
## Get student exams by search  [/Assignments/get_student_exams_by_search?user_id=100&text=yare&due_date=2016-07-08 14:55:00&publish=&2016-07-08&course_id=1&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + course_id : 1 (optional,number)
    + text : yare (optional,string)
    + due_date : 2016-07-08 14:55:00 (optional,date)
    + publish : 2016-07-08 14:55:00 (optional, date)

### Get student exams by search [GET]
This action allows to get student exams by search .

+ user_id (int) - user_id
+ course_id : (int) - course_id
+ text :  (string) - text
+ due_date : (date) - due_date
+ publish : (date) - publish

+ Response 200 (application/json)

            {"data":[{"Assignment":{"id":"668575","title":"YARE","created":"2016-06-30 12:58:39","due_datetime":"2016-07-08 14:55:00","cutoff_datetime":"2016-07-09 13:55:00","allow_multiple_submissions":false,"accept_submission_attachment":false,"issue_certificates":false,"exam_for_training_course":false,"assessment_id":null,"submission_id":null,"course_title":"Math-101","course_id":"7127","status":"Missed"}}]}
 
 
        
## Get student homework list  [/Assignments/get_student_homework_list?user_id=100&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer

### Get student homework list [GET]
This action allows to get student homework list .

+ user_id (int) - user_id


+ Response 200 (application/json)

        
        {"data":[{"Assignment":{"id":"668575","title":"YARE","created":"2016-06-30 12:58:39","due_datetime":"2016-07-08 14:55:00","cutoff_datetime":"2016-07-09 13:55:00","allow_multiple_submissions":false,"accept_submission_attachment":false,"issue_certificates":false,"exam_for_training_course":false,"assessment_id":null,"submission_id":null,"course_title":"Math-101","course_id":"7127","status":"Missed"}}],"avaliable_courses":[{"Course":{"id":"5567","title":"Science"}}]}

## Get student homework by search  [/Assignments/get_student_homework_by_search?user_id=100&text=yare&due_date=2016-07-08 14:55:00&publish=&2016-07-08&course_id=1&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + course_id : 1 (optional,number)
    + text : yare (optional,string)
    + due_date : 2016-07-08 14:55:00 (optional,date)
    + publish : 2016-07-08 14:55:00 (optional, date)

### Get student homework by search [GET]
This action allows to get student homework by search .

+ user_id (int) - user_id
+ course_id : (int) - course_id
+ text :  (string) - text
+ due_date : (date) - due_date
+ publish : (date) - publish

+ Response 200 (application/json)

            {"data":[{"Assignment":{"id":"668575","title":"YARE","created":"2016-06-30 12:58:39","due_datetime":"2016-07-08 14:55:00","cutoff_datetime":"2016-07-09 13:55:00","allow_multiple_submissions":false,"accept_submission_attachment":false,"issue_certificates":false,"exam_for_training_course":false,"assessment_id":null,"submission_id":null,"course_title":"Math-101","course_id":"7127","status":"Missed"}}]}
 
        
## Get student exam detail  [/Assignments/student_exam_detail?user_id=100&assignment_id=1006&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1006 (required, number)   ID of  assignment

### Get student exam detail [GET]
This action allows to get student exam detail .

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id

+ Response 200 (application/json)

        {"Assignment":{"0":{"Assignment":{"title":"SubExam 2","publishing_datetime":"2016-06-29 14:30:00","due_datetime":"2016-07-03 12:10:00","mark":"147","submission_mark":"0","submission_id":"15726887","total_mark":"0\/147"}},"Question":[{"Question":{"id":"3291719","type":"fillblank","text":"<p>\r\n\t\u0645\u0627 \u0647\u0648\u0627 \u0627\u0633\u0645\u0643 \u0627\u0644\u0643\u0627\u0645\u0644 \u061f<\/p>\r\n","correct_answer":".","attachment_id":null,"student_answer":null,"Subquestions":[{"Question":{"id":"3291720","type":"fillblank","difficulty":"0","text":"[1]","text_eng":null,"mark":"3.33333","bonus":false,"order":null,"correct_answer":"\u0644\u064a\u0644\u0649 \u062d\u0633\u0646","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:23:45","modified":"2016-04-04 16:23:45","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291719","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291721","type":"fillblank","difficulty":"0","text":"[2]","text_eng":null,"mark":"3.33333","bonus":false,"order":null,"correct_answer":"\u0633\u0639\u064a\u062f \u062d\u0644\u0648\u0627\u0646\u064a","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:23:45","modified":"2016-04-04 16:23:45","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291719","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291722","type":"fillblank","difficulty":"0","text":"[3]","text_eng":null,"mark":"3.33333","bonus":false,"order":null,"correct_answer":"\u0639\u0628\u062f\u0627\u0644\u0644\u0647 \u0627\u0628\u0648 \u0633\u0627\u0644","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:23:45","modified":"2016-04-04 16:23:45","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291719","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"}]}},{"Question":{"id":"3291723","type":"hotspot","text":"<p>\r\n\t\u062d\u062f\u062f \u0639\u064a\u0646 \u0627\u0644\u0627\u0631\u0646\u0628<\/p>\r\n","correct_answer":"389.40625,181,441.40625,222","attachment_id":"3145559","student_answer":null,"attachment_url":"https:\/\/s3.amazonaws.com\/classera\/111\/qatt\/3145559.jpg?response-content-disposition=attachment%3Bfilename%3D%22%C3%98%C2%A3%C3%98%C2%B1%C3%99%C2%86%C3%98%C2%A8.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468913089&Signature=BbzXuLgOt0XFEzSRMwJ7Yt9ndGM%3D","position":["389.40625","181","441.40625","222"]}},{"Question":{"id":"3291724","type":"matching","text":"<p>\r\n\t\u0627\u064a\u0646 \u0627\u0644\u0627\u0631\u0646\u0628<\/p>\r\n","correct_answer":".","attachment_id":null,"student_answer":null,"Subquestions":[{"Question":{"id":"3291725","type":"matching","difficulty":"0","text":"\u0647\u0646\u0627","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u0644\u0627 \u064a\u0648\u062c\u062f ","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291726","type":"matching","difficulty":"0","text":"\u0647\u0646\u0627\u0643","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u0644\u0627 \u064a\u0648\u062c\u062f \u0627\u0631\u0646\u0628","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291727","type":"matching","difficulty":"0","text":"\u0641\u064a \u0627\u0644\u0628\u064a\u062a","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0641\u0635","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291728","type":"matching","difficulty":"0","text":"\u0641\u064a \u0627\u0644\u0645\u0632\u0631\u0639\u0629","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u064a\u0644\u0639\u0628","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"}]}},{"Question":{"id":"3291729","type":"mcq","text":"<p>\r\n\t<img alt=\"\" src=\"http:\/\/s3.amazonaws.com\/classera-ck2\/80\/images\/1422874226_2.jpg\" style=\"width: 180px; height: 138px;\" \/><\/p>\r\n","correct_answer":"3","attachment_id":null,"student_answer":null,"choices":{"answer_1":"<p>\r\n\t\u0627\u0644\u0633\u0627\u0639\u0629  4<\/p>\r\n","answer_2":"<p>\r\n\t\u0627\u0644\u0633\u0627\u0639\u0629 12 \u0648 50 \u062f\u0642\u064a\u0642\u0629<\/p>\r\n","answer_3":"<p>\r\n\t\u0627\u0644\u0633\u0627\u0639\u0629 5<\/p>\r\n","answer_4":"","answer_5":"","answer_6":""},"result":"wrong"}},{"Question":{"id":"3291730","type":"short","text":"<p>\r\n\t\u0627\u0643\u0645\u0644\u064a \u0627\u0644\u062c\u0645\u0644 \u0627\u0644\u062a\u0627\u0644\u064a\u0629 \u0628\u0648\u0636\u0639 \u0627\u0644\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 ( \u0641\u0648\u0642 - \u062a\u062d\u062a - \u0642\u0628\u0644 - \u0628\u0639\u062f )<\/p>\r\n<p>\r\n\t\u064a\u0645\u0634\u064a \u0627\u0644\u0646\u0627\u0633 .......................... \u0627\u0644\u0631\u0635\u064a\u0641<\/p>\r\n<p>\r\n\t\u0646\u0644\u0642\u064a \u0627\u0644\u062a\u062d\u064a\u0629 ....................... \u0627\u0644\u0645\u0635\u0627\u0641\u062d\u0629<\/p>\r\n<p>\r\n\t\u0639\u0627\u062f \u0648\u0627\u0644\u062f \u0639\u0645\u0631 \u0627\u0644\u0649 \u0627\u0644\u0633\u064a\u0627\u0631\u0629 ................... \u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0631\u062c\u0644 \u0627\u0644\u0645\u0633\u0646<\/p>\r\n","correct_answer":"<p>\r\n\t\u0641\u0648\u0642<\/p>\r\n<p>\r\n\t\u0642\u0628\u0644<\/p>\r\n<p>\r\n\t\u0628\u0639\u062f<\/p>\r\n","attachment_id":null,"student_answer":null,"choices":{"correct_answer":"<p>\r\n\t\u0641\u0648\u0642<\/p>\r\n<p>\r\n\t\u0642\u0628\u0644<\/p>\r\n<p>\r\n\t\u0628\u0639\u062f<\/p>\r\n"},"result":"wrong"}},{"Question":{"id":"3291731","type":"tfq","text":"<p dir=\"RTL\" style=\"margin: 0px; padding: 0px; outline: none; color: rgb(54, 54, 54); font-family: 'Trebuchet MS', Tahoma, Verdana, Arial, sans-serif; font-size: 13.6px; text-align: center; background-color: rgb(255, 228, 92);\">\r\n\t<span style=\"margin: 0px; padding: 0px; outline: none; font-size: 16px;\"><strong style=\"margin: 0px; padding: 0px; outline: none;\"> <u style=\"margin: 0px; padding: 0px; outline: none;\">\u0627\u0644\u0623\u0632\u0648\u0627\u062c \u0627\u0644\u0645\u0631\u062a\u0628\u0629  \u0627\u0644\u0623\u062a\u064a\u0629 \u0645\u062a\u0633\u0627\u0648\u064a\u0629 :-<\/u><\/strong><\/span><\/p>\r\n<p dir=\"RTL\" style=\"margin: 0px; padding: 0px; outline: none; color: rgb(54, 54, 54); font-family: 'Trebuchet MS', Tahoma, Verdana, Arial, sans-serif; font-size: 13.6px; text-align: center; background-color: rgb(255, 228, 92);\">\r\n\t<span style=\"margin: 0px; padding: 0px; outline: none; font-size: 16px;\"><strong style=\"margin: 0px; padding: 0px; outline: none;\">        (9 , 6)    =   <\/strong><\/span><strong style=\"margin: 0px; padding: 0px; outline: none; font-size: 16px;\">  (6 , 9)<\/strong><\/p>\r\n","correct_answer":"2","attachment_id":null,"student_answer":null,"choices":{"answer_1":"true","answer_2":"false"},"result":"wrong"}}]}} 
        
## Get student homework detail  [/Assignments/student_homework_detail?user_id=100&assignment_id=1005&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1005 (required, number)   ID of  assignment

### Get student homework detail [GET]
This action allows to get student homework detail .

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id

+ Response 200 (application/json)        

        {"Assignment":{"0":{"Assignment":{"title":"SubExam 2","publishing_datetime":"2016-06-29 14:30:00","due_datetime":"2016-07-03 12:10:00","mark":"147","submission_mark":"0","submission_id":"15726887","total_mark":"0\/147"}},"Question":[{"Question":{"id":"3291719","type":"fillblank","text":"<p>\r\n\t\u0645\u0627 \u0647\u0648\u0627 \u0627\u0633\u0645\u0643 \u0627\u0644\u0643\u0627\u0645\u0644 \u061f<\/p>\r\n","correct_answer":".","attachment_id":null,"student_answer":null,"Subquestions":[{"Question":{"id":"3291720","type":"fillblank","difficulty":"0","text":"[1]","text_eng":null,"mark":"3.33333","bonus":false,"order":null,"correct_answer":"\u0644\u064a\u0644\u0649 \u062d\u0633\u0646","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:23:45","modified":"2016-04-04 16:23:45","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291719","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291721","type":"fillblank","difficulty":"0","text":"[2]","text_eng":null,"mark":"3.33333","bonus":false,"order":null,"correct_answer":"\u0633\u0639\u064a\u062f \u062d\u0644\u0648\u0627\u0646\u064a","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:23:45","modified":"2016-04-04 16:23:45","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291719","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291722","type":"fillblank","difficulty":"0","text":"[3]","text_eng":null,"mark":"3.33333","bonus":false,"order":null,"correct_answer":"\u0639\u0628\u062f\u0627\u0644\u0644\u0647 \u0627\u0628\u0648 \u0633\u0627\u0644","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:23:45","modified":"2016-04-04 16:23:45","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291719","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"}]}},{"Question":{"id":"3291723","type":"hotspot","text":"<p>\r\n\t\u062d\u062f\u062f \u0639\u064a\u0646 \u0627\u0644\u0627\u0631\u0646\u0628<\/p>\r\n","correct_answer":"389.40625,181,441.40625,222","attachment_id":"3145559","student_answer":null,"attachment_url":"https:\/\/s3.amazonaws.com\/classera\/111\/qatt\/3145559.jpg?response-content-disposition=attachment%3Bfilename%3D%22%C3%98%C2%A3%C3%98%C2%B1%C3%99%C2%86%C3%98%C2%A8.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468913089&Signature=BbzXuLgOt0XFEzSRMwJ7Yt9ndGM%3D","position":["389.40625","181","441.40625","222"]}},{"Question":{"id":"3291724","type":"matching","text":"<p>\r\n\t\u0627\u064a\u0646 \u0627\u0644\u0627\u0631\u0646\u0628<\/p>\r\n","correct_answer":".","attachment_id":null,"student_answer":null,"Subquestions":[{"Question":{"id":"3291725","type":"matching","difficulty":"0","text":"\u0647\u0646\u0627","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u0644\u0627 \u064a\u0648\u062c\u062f ","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291726","type":"matching","difficulty":"0","text":"\u0647\u0646\u0627\u0643","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u0644\u0627 \u064a\u0648\u062c\u062f \u0627\u0631\u0646\u0628","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291727","type":"matching","difficulty":"0","text":"\u0641\u064a \u0627\u0644\u0628\u064a\u062a","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0641\u0635","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"},{"Question":{"id":"3291728","type":"matching","difficulty":"0","text":"\u0641\u064a \u0627\u0644\u0645\u0632\u0631\u0639\u0629","text_eng":null,"mark":"3.5","bonus":false,"order":null,"correct_answer":"\u064a\u0644\u0639\u0628","answer_1":null,"answer_2":null,"answer_3":null,"answer_4":null,"answer_5":null,"answer_6":null,"created":"2016-04-04 16:27:01","modified":"2016-04-04 16:27:01","assignment_id":"668573","answer_order":null,"deleted":false,"attachment_id":null,"criterion_id":null,"taxonomy_id":null,"assignment_section_id":null,"original_question_id":null,"show_to_evaluator":null,"parent_id":"3291724","question_hint":null,"correct_answer_response":null,"wrong_answer_response":null,"student_answer":null},"result":"wrong"}]}},{"Question":{"id":"3291729","type":"mcq","text":"<p>\r\n\t<img alt=\"\" src=\"http:\/\/s3.amazonaws.com\/classera-ck2\/80\/images\/1422874226_2.jpg\" style=\"width: 180px; height: 138px;\" \/><\/p>\r\n","correct_answer":"3","attachment_id":null,"student_answer":null,"choices":{"answer_1":"<p>\r\n\t\u0627\u0644\u0633\u0627\u0639\u0629  4<\/p>\r\n","answer_2":"<p>\r\n\t\u0627\u0644\u0633\u0627\u0639\u0629 12 \u0648 50 \u062f\u0642\u064a\u0642\u0629<\/p>\r\n","answer_3":"<p>\r\n\t\u0627\u0644\u0633\u0627\u0639\u0629 5<\/p>\r\n","answer_4":"","answer_5":"","answer_6":""},"result":"wrong"}},{"Question":{"id":"3291730","type":"short","text":"<p>\r\n\t\u0627\u0643\u0645\u0644\u064a \u0627\u0644\u062c\u0645\u0644 \u0627\u0644\u062a\u0627\u0644\u064a\u0629 \u0628\u0648\u0636\u0639 \u0627\u0644\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 ( \u0641\u0648\u0642 - \u062a\u062d\u062a - \u0642\u0628\u0644 - \u0628\u0639\u062f )<\/p>\r\n<p>\r\n\t\u064a\u0645\u0634\u064a \u0627\u0644\u0646\u0627\u0633 .......................... \u0627\u0644\u0631\u0635\u064a\u0641<\/p>\r\n<p>\r\n\t\u0646\u0644\u0642\u064a \u0627\u0644\u062a\u062d\u064a\u0629 ....................... \u0627\u0644\u0645\u0635\u0627\u0641\u062d\u0629<\/p>\r\n<p>\r\n\t\u0639\u0627\u062f \u0648\u0627\u0644\u062f \u0639\u0645\u0631 \u0627\u0644\u0649 \u0627\u0644\u0633\u064a\u0627\u0631\u0629 ................... \u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0631\u062c\u0644 \u0627\u0644\u0645\u0633\u0646<\/p>\r\n","correct_answer":"<p>\r\n\t\u0641\u0648\u0642<\/p>\r\n<p>\r\n\t\u0642\u0628\u0644<\/p>\r\n<p>\r\n\t\u0628\u0639\u062f<\/p>\r\n","attachment_id":null,"student_answer":null,"choices":{"correct_answer":"<p>\r\n\t\u0641\u0648\u0642<\/p>\r\n<p>\r\n\t\u0642\u0628\u0644<\/p>\r\n<p>\r\n\t\u0628\u0639\u062f<\/p>\r\n"},"result":"wrong"}},{"Question":{"id":"3291731","type":"tfq","text":"<p dir=\"RTL\" style=\"margin: 0px; padding: 0px; outline: none; color: rgb(54, 54, 54); font-family: 'Trebuchet MS', Tahoma, Verdana, Arial, sans-serif; font-size: 13.6px; text-align: center; background-color: rgb(255, 228, 92);\">\r\n\t<span style=\"margin: 0px; padding: 0px; outline: none; font-size: 16px;\"><strong style=\"margin: 0px; padding: 0px; outline: none;\"> <u style=\"margin: 0px; padding: 0px; outline: none;\">\u0627\u0644\u0623\u0632\u0648\u0627\u062c \u0627\u0644\u0645\u0631\u062a\u0628\u0629  \u0627\u0644\u0623\u062a\u064a\u0629 \u0645\u062a\u0633\u0627\u0648\u064a\u0629 :-<\/u><\/strong><\/span><\/p>\r\n<p dir=\"RTL\" style=\"margin: 0px; padding: 0px; outline: none; color: rgb(54, 54, 54); font-family: 'Trebuchet MS', Tahoma, Verdana, Arial, sans-serif; font-size: 13.6px; text-align: center; background-color: rgb(255, 228, 92);\">\r\n\t<span style=\"margin: 0px; padding: 0px; outline: none; font-size: 16px;\"><strong style=\"margin: 0px; padding: 0px; outline: none;\">        (9 , 6)    =   <\/strong><\/span><strong style=\"margin: 0px; padding: 0px; outline: none; font-size: 16px;\">  (6 , 9)<\/strong><\/p>\r\n","correct_answer":"2","attachment_id":null,"student_answer":null,"choices":{"answer_1":"true","answer_2":"false"},"result":"wrong"}}]}}
 
## Student assignment info  [/Assignments/student_assignment_info?user_id=100&assignment_id=1006&course_id=123&password=class52a&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1006 (required, number)   ID of  assignment
    + course_id: 123 (required, number) Id of course
    + password :"class52a" (optional , text)
   
### Student assignment info  [POST]
This action allows to get student assignment info  .

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id
+ course_id (int) - course_id
+ password (text) - password required if exam include password

+ Response 200 (application/json) 
 
        {"assignment_info":{"title":"QW_tom_exam_2","comments":"\u0627\u0644\u062a\u0639\u0644\u064a\u0642\u0627\u062a","created":"2016-06-14 12:35:24","publishing_datetime":"2016-06-14 11:00:00","due_datetime":"2016-08-17 12:26:00","duration":7200,"maxMark":"100","multiple_submissions":true,"max_submissions":"0","student_submissions":0,"password":true,"teacher_name":"Tom Friedman","course_title":"Math-101"}}
    
## Student show questions  [/Assignments/student_show_questions?user_id=100&assignment_id=1006&password=class52a&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1006 (required, number)   ID of  assignment
    + password : "class52a" (optional , text)
   
### Student show questions [POST]
This action allows to  student to show questions  .

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id
+ password (text) - password required if exam include password

+ Response 200 (application/json)

        {"assignment_settings":{"title":"QW_tom_exam_2","comments":"\u0627\u0644\u062a\u0639\u0644\u064a\u0642\u0627\u062a","created":"2016-06-14 12:35:24","publishing_datetime":"2016-06-14 11:00:00","due_datetime":"2016-08-17 12:26:00","maxMark":"100","show_hints":true,"show_responses":false,"submit_attachments":false,"question_time":"0","started_exam":false,"time_left":7200,"starting_time":"2016-07-18 11:35:33","submission_id":"15727164","tts_time_running_out":"time is running out!"},"assignment_questions":[{"Question":{"id":"3291758","parent_id":null,"type":"tfq","text":"\r\n\tTFQ :  Are you Ready ?<\/p>\r\n","question_hint":"Hint : b7keelak yes True","mark":"16.66","attachment_id":null,"Options":["true","false"]}},{"Question":{"id":"3291759","parent_id":null,"type":"mcq","text":"\r\n\tMCQ : Choose the correct Answer <\/p>\r\n","question_hint":"Hint : el jawab Answer3 mn el a5er","mark":"16.66","attachment_id":null,"Options":["\r\n\tAnswer1 wrong<\/p>\r\n","\r\n\tAnswer2 wrong<\/p>\r\n","\r\n\tAnswer3 correct<\/p>\r\n","\r\n\tAnswer4 wrong<\/p>\r\n"]}},{"Question":{"id":"3291760","parent_id":null,"type":"short","text":"\r\n\tshort\/Essay : write about anything in your mind , just please write something plz plz<\/p>\r\n","question_hint":"oktob klmet 'something' btenja7","mark":"16.66","attachment_id":null}},{"Question":{"id":"3291761","parent_id":null,"type":"matching","text":"\r\n\tMatching : match the options with the correct answers<\/p>\r\n","question_hint":null,"mark":"16.66","attachment_id":null,"Subquestions":{"Options":["ans2","ans4","ans3","ans1"],"Questions":[{"id":"3291762","parent_id":"3291761","type":"matching","text":"op1","question_hint":null,"mark":"4.16","attachment_id":null},{"id":"3291763","parent_id":"3291761","type":"matching","text":"op2","question_hint":null,"mark":"4.16","attachment_id":null},{"id":"3291764","parent_id":"3291761","type":"matching","text":"op3","question_hint":null,"mark":"4.16","attachment_id":null},{"id":"3291765","parent_id":"3291761","type":"matching","text":"op4","question_hint":null,"mark":"4.16","attachment_id":null}]}}},{"Question":{"id":"3291766","parent_id":null,"type":"hotspot","text":"\r\n\tHotspot : highlight the word 'TEST'<\/p>\r\n","question_hint":null,"mark":"16.66","attachment_id":"3145704","attachment_url":"https:\/\/s3.amazonaws.com\/classera\/111\/qatt\/3145704.jpeg?response-content-disposition=attachment%3Bfilename%3D%22test_image.jpeg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1468917335&Signature=KGhiGIv4PbHPnl7ZJlS87%2FC7zU4%3D"}},{"Question":{"id":"3291767","parent_id":null,"type":"fillblank","text":"\r\n\tfillblank : fill the blank with the correct answes<\/div>\r\\r\n\tawwal wa7ad b1 w tane wa7ad b2 w talet wa7ad b3  w rabe3 wa7ad b4<\/div>\r\n","question_hint":null,"mark":"16.66","attachment_id":null,"Subquestions":{"Blanks_number":4,"Questions_ids":["3291768","3291769","3291770","3291771"]}}}]}

## Student save draft  [/Assignments/student_save_draft?user_id=100&assignment_id=1006&question_id=4&answer=2&submission_id=1515&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1006 (required, number) - ID of  assignment
    + question_id : 4 (required, number) - id of question
    + answer: 2 (required, number) - id of answer
    + submission_id: 1515 (required, number) - id of submission

### Student save draft [POST]
This action allows to save answer on draft .

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id
+ question_id (int) - question_id
+ answer (int) - answer
+ submission_id - (int) - submission_id

+ Response 200 (application/json)
 
        {"success_message" : "Draft has been saved successfully !"}


## Student save answer [/Assignments/student_save_answer?user_id=100&assignment_id=1006&question_id=4&answer=2&submission_id=1111&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1006 (required, number)   ID of  assignment
    + question_id : 4 (required, number) id of question
    + answer: 2 (required, text) id of answer
    + submission_id: 1111(required, number) id of submission

### Student save answer [POST]
This action allows to save answer .

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id
+ question_id (int) - question_id
+ answer (string) - answer
+ submission_id - (boxt) - submission_id

+ Response 200 (application/json)

        {"status": "correct","question_tts_message": "mbrook"}
        
## Student submit exam [/Assignments/student_submit_exam?user_id=100&assignment_id=1006&submission_id=1111&course_id=1717&answer=1&access_token=your_access_token]
+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1006 (required, number)   ID of  assignment
    + submission_id: 1111 (required, number) id of submission
    + course_id: 1717 (required, number)
    + answer: 1 

### Student submit exam [POST]
This action allows to Student submit exam .

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id
+ submission_id - (int) - submission_id
+ course_id (int) - + course_id
+ answer (array of answer) - answer


+ Response 200 (application/json)

        {"status" : "Success"}

## Student exam score [/Assignments/student_exam_score?user_id=100&assignment_id=1006&access_token=your_access_token]

+ Parameters :

    + user_id: 100 (required, number) - ID of the user in form of an integer
    + assignment_id : 1006 (required, number)   ID of  assignment

### Student exam score [POST]
This action allows to Student exam mark.

+ user_id (int) - user_id
+ assignment_id (int) - assignment_id

+ Response 200 (application/json)

        {"title": "QW_tom_exam_2","maxMark": "100","total_mark": "83.26","retake": 1}


## List teacher assignments [/Assignments/st_teacher_assignments?supervisor_id=6&teacher_id=51&access_token==your_access_token]
### List teacher assignments [GET] 
This action will list all assignments (with thier information) for a teacher

+ teacher_id (int) - user_id
+ supervisior_id (int) - user_id
+ course_id (optional,int) - course_id 
+ semester_id (optional,int) - semester_id 
+ type (optional,int) - type(Exam or Homework)    

+ Response 200 (application/json)

            [
            {
                "Assignment": {
                    "id": "4",
                    "title": "test22",
                    "publishing_datetime": "2017-07-19 11:42:03",
                    "due_datetime": "2018-07-20 00:00:00",
                    "multi_publish_datetime": false,
                    "semester_id": "1",
                    "type": "Exam",
                    "course_id": "6",
                    "created": "2017-07-19 11:41:05",
                    "viewed": true
                }
            },
            {
                "Assignment": {
                    "id": "5",
                    "title": "tesst22222222",
                    "publishing_datetime": "2017-07-19 12:00:00",
                    "due_datetime": "2017-07-22 11:45:00",
                    "multi_publish_datetime": false,
                    "semester_id": "1",
                    "type": "Homework",
                    "course_id": "6",
                    "created": "2017-07-19 11:46:06",
                    "viewed": true
                }
            }
        ]



## Group Notifications
Resources related to user Notifications in the API.

## User device data  [/Notifications/user_device_data?user_id=100&device_id=13&device_token=152gfr&OS=0&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + device_id: 13 (required, number) - Id of device
    + device_token: 152gfr (required, text)
    + OS: 0 (required, number) 

### User device data [POST]
This action allows to save student user device data  .

+ user_id (int) - user_id
+ device_id: (int) - device_id is required for android device and optional for IOS device
+ device_token: (text) - device_token
+ OS: (int) 0 for android and 1 for IOS .

+ Response 200 (application/json)


## Update notificationLog status  [/Notifications/update_notificationLog_status?user_id=100&$uuid =13&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
    + uuid: 13 (required, number) - Id of message notification
    

### Update notificationLog status [POST]
This action allows to   .

+ user_id (int) - user_id update notificationLog status
+ uuid (text) - uuid Id of message notification

+ Response 200 (application/json)


## Group Announcements
Resources related to user Announcements in the API.

## Get all announcement  [/Announcement/get_all_announcement?user_id=100&device_id=13&gfr&OS=0&access_token=your_access_token]

+ Parameters :
    + user_id: 100 (required, number) - ID of the user in form of an integer
   
### Get all announcement [GET]
This action allows to get all announcement .

+ user_id (int) - user_id

+ Response 200 (application/json)
    
        {"id": "519","title": "Test Annoucments 2","details": "<p>\r\n\tTest Annoucments 2</p>\r\n","school_id": "111","start": "2016-04-23 14:13:27","end": "2016-04-25 14:13:00","deleted": false,"created": "2016-04-24 14:13:49","modified": "2016-04-24 14:13:49"}

## Get announcement details  [/Announcement/get_announcement_details?announcement_id=100&access_token=your_access_token]

+ Parameters :
    + announcement_id: 100 (required, number) - ID of the announcement in form of an integer
   
### Get announcement details [GET]
This action allows to get announcement details .

+ announcement_id (int) - announcement_id

+ Response 200 (application/json)
    
        {"id": "519","title": "Test Annoucments 2","details": "<p>\r\n\tTest Annoucments 2</p>\r\n","school_id": "111","start": "2016-04-23 14:13:27","end": "2016-04-25 14:13:00","deleted": false,"created": "2016-04-24 14:13:49","modified": "2016-04-24 14:13:49"}
        

## Add new announcement [/Announcement/add_new_announcement?access_token=your_access_token]

+ Parameters :
    + user_id.
    + school_id.
    + title.
    + details.
    + start_date (date)
    + end_date (date)
    + roles array (The target role IDs who can see the announcement.)
   
### Add new announcement [POST]
This action allow admin/manager to add a new announcement .

+ user_id (int) -id
+ school_id (int) -id
+ title (text) -title
+ details(text) -details
+ start_date (date) 
+ end_date (date)
+ roles array (The target role IDs who can see the announcement.)
+ Response 200 (application/json)
    
            {"success":"1","message":"The announcement has been saved"}         


## Group SupportClaims
Resources related to Ticketing system in the API.

## Get all tickets  [/SupportClaims/get_all_tickets?&access_token=your_access_token]

+ Parameters :
    + id: 100 (optional, number) - ID of the ticket in form of an integer
    + status: 1 (optional, number) - Status of the ticket in form of a tinyintetgar
    + date: 2017-07-02 (optional, date) - Date of created ticket in form of a date
    + title: Issue in reports (optional, text) - Title of the ticket in form of a text
    + module: 1 (optional, number) - Module of which secteion the ticket is related to, in form of a date
    + type: 2 (optional, number) - Type of the ticket in form of a number
### Get all tickets [GET]
This action allows to get all tickets for logged in user .

+ id (int) - id
+ type (int) - type
+ module (int) - module
+ title (text) - title
+ status (int) - status
+ date (date) - date

+ Response 200 (application/json)
    
        {"tickets":[{"SupportClaim":{"id":"2348","title":"Client Ticket Test","body":"Client Ticket Test","user_id":"88723","status":"1","url":"","school_id":"111","type":"1","module":"2","assign_to":"39815","general_problem":false,"school_problem":"111","created":"2017-03-27 15:16:10","modified":"2017-06-07 13:51:37","team":false,"priority":"1","priority_title":"Low","priority_title_ara":"منخفض","type_title":"System Bug","type_title_ara":"خطأ بالنظام","status_title":"Open","comments_count":37},"ClasseraModule":{"title_eng":"Reports","title_ara":"التقارير"},"School":{"name":"English Test School - 022","english_name":"English Test School - 022"},"User":{"id":"88723","first_name":"School","family_name":"Admin","school_id":"111","avatar":"https://s3.amazonaws.com/classera/111/profilepic/thumb_200/88723.jpg?response-content-disposition=attachment%3Bfilename%3D%22steve_harvey.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1499063982&Signature=9%2Fut8nC%2BesjY2CYyoOwwoDJKJ%2FU%3D"}}],"statistics":{"Open":"1","Inprogress":"1","Pending":"2","Closed":"1"},"total_count":5}

## Get ticket details  [/SupportClaims/get_ticket_details?id=100&access_token=your_access_token]

+ Parameters :
    + id: 100 (required, number) - ID of the ticket in form of an integer
   
### Get ticket details [GET]
This action allows to get ticket details .

+ id (int) - id

+ Response 200 (application/json)
    
        {"ticket_details":{"SupportClaim":{"id":"2353","title":"Pending ticket","body":"Pending ticket","user_id":"88723","status":"3","url":"","school_id":"111","type":"2","module":"11","assign_to":null,"general_problem":true,"school_problem":null,"created":"2017-06-11 11:09:56","modified":"2017-07-02 09:57:50","team":false,"priority":"2","priority_title":"Medium","priority_title_ara":"متوسط","type_title":"New Feature Request","type_title_ara":"طلب خاصية جديدة","status_title":"Pending"},"ClasseraModule":{"title_eng":"Virtual Class Rooms","title_ara":"الفصول الذكية"},"School":{"name":"English Test School - 022","english_name":"English Test School - 022"},"User":{"school_id":"111","first_name":"School","family_name":"Admin","id":"88723","avatar":"https://s3.amazonaws.com/classera/111/profilepic/thumb_200/88723.jpg?response-content-disposition=attachment%3Bfilename%3D%22steve_harvey.jpg%22&AWSAccessKeyId=AKIAINQWGSCNCBOYK2PQ&Expires=1499065076&Signature=JcEfDWsZ4Q7L4P0%2BQJlQWASsRkk%3D"},"TicketComment":[{"id":"4311","body":"Test From API","user_id":"2639078","ticket_id":"2353","created":"2017-07-02 09:57:48","modified":"2017-07-02 09:57:48","type":false,"User":{"id":"2639078","first_name":"Support","family_name":"Team","school_id":"36","avatar":"https://me.classera.com/img/classera_logo_120x120.png"},"CommentAttachment":[{"id":"581","reference_id":"4311","original_filename":"original_file_name/test","attachment_link":"this_is_attachment_link","reference_type":"2","created":"2017-07-02 09:57:48","modified":"2017-07-02 09:57:48"},{"id":"582","reference_id":"4311","original_filename":"original_file_name/test/two","attachment_link":"this_is_attachment_link/two","reference_type":"2","created":"2017-07-02 09:57:48","modified":"2017-07-02 09:57:48"},{"id":"583","reference_id":"4311","original_filename":"original_file_name/test/three","attachment_link":"this_is_attachment_link/three","reference_type":"2","created":"2017-07-02 09:57:48","modified":"2017-07-02 09:57:48"}]},{"id":"4312","body":"Test From API","user_id":"2639078","ticket_id":"2353","created":"2017-07-02 09:57:50","modified":"2017-07-02 09:57:50","type":false,"User":{"id":"2639078","first_name":"Support","family_name":"Team","school_id":"36","avatar":"https://me.classera.com/img/classera_logo_120x120.png"},"CommentAttachment":[{"id":"584","reference_id":"4312","original_filename":"original_file_name/test","attachment_link":"this_is_attachment_link","reference_type":"2","created":"2017-07-02 09:57:50","modified":"2017-07-02 09:57:50"},{"id":"585","reference_id":"4312","original_filename":"original_file_name/test/two","attachment_link":"this_is_attachment_link/two","reference_type":"2","created":"2017-07-02 09:57:50","modified":"2017-07-02 09:57:50"},{"id":"586","reference_id":"4312","original_filename":"original_file_name/test/three","attachment_link":"this_is_attachment_link/three","reference_type":"2","created":"2017-07-02 09:57:50","modified":"2017-07-02 09:57:50"}]}],"TicketAttachment":[]},"comments_count":2}
        
## Add comment [/SupportClaims/add_comment?access_token=your_access_token]

+ Parameters :
    + ticket_id: 100 (required, number) - ID of the ticket in form of an integer
    + body:Test From API (required, text) -Body of the comment in form of an integer
    + type:1 (required, number) - Type of the comment that added by clients in form of an integer
    + attachments[index][original_filename]: original_file_name/file.extension - Comment's attchment file name in form of a text
    + attachments[index][attachment_link]: "https://s3.amazonaws.com/classera/111/profilepic/thumb_200/88723.jpg" - Comment's attachment link in form of a text
   
### Add comment [POST]
This action allows to add a comments on ticket.

+ ticket_id (int) - ticket_id
+ body (text) - body
+ type (number) type
+ attachment[index][original_filename] (array) attachment[index][original_filename]
+ attachment[index][attachment_link] (array) attachment[index][attachment_link]

+ Response 200 (application/json)
    
        {"TicketComment":{"ticket_id":"2353","user_id":"2639078","type":0,"body":"Test From API","modified":"2017-07-02 09:57:50","created":"2017-07-02 09:57:50","id":"4312"}}

## Group Supervisors
Resources related to Supervisor actions in system in the API.

## Teacher's Statistics [/supervisors/teachers_details?access_token=your_access_token]

+ Parameters :
+ show_interaction: 1 (int), either 0 or 1.
+ sup_id: 2 (int, required) Supervisor User id.
+ school_id: 1 (int, required) School id.
+ from: 2017-3-3 (date, Format: YYYY-MM-DD).
+ to: 2017-3-4 (date, Format: YYYY-MM-DD).
        
### Teacher's Statistics [GET]
+ show_interaction: (int)
+ sup_id: (int)
+ school_id: (int)
+ from: (date)
+ to: (date)
    
+ Response 200 (application/json)

        {
            "stats": {
                "Teacher_id": {
                    "Course_id": {
                        "Type": {
                            "Attributes": "Values"
                        }
                    }
                },
            "teachers": [
                "UserDetailsView" : {
                        "id": "2",
                        "number": "999125347199",
                        "ID_Num": null,
                        "teacher_id": "2",
                        "teacher_user_id": "6",
                        "teacher_full_name": "Teacher",
                        "teacher_full_name_ara": "معلم",
                        "status_id": "1",
                        "status_title": "Active",
                        "teacher_date_of_birth": "2017-07-03",
                        "teacher_place_of_birth": "",
                        "teacher_address": "",
                        "teacher_phone_number": "",
                        "teacher_mobile_number": "",
                        "teacher_email": null,
                        "school_id": "1",
                        "teacher_nationality_id": "1",
                        "last_activity_date": "2017-07-12 09:13:52"
                },
                "Course": [
                {
                    "LectureDetailsView": {
                        "course_id": "1",
                        "course_title": "Math-101",
                        "level_title": "Grade 7"
                    }
                }
                ]
            ]
        }


## Workload Report [/teachers/workload_report/?access_token=your_access_token&user_id=7&lang=ara]
    
### Workload Report [GET]

This action returns Teachers' workload report.

+ user_id (int , required) - supervisor ID.
+ lang (string) - language (allow arabic language).
    
+ Response 200 (application/json)

        [
            {
                "TeacherTimeslotsView": {
                    "id": "3",
                    "number": "9997777799",
                    "ID_Num": "1234567890",
                    "teacher_id": "3",
                    "teacher_user_id": "41",
                    "teacher_full_name_ara": "",
                    "status_id": "1",
                    "teacher_date_of_birth": "2017-07-18",
                    "teacher_place_of_birth": "",
                    "teacher_address": "",
                    "teacher_phone_number": "",
                    "teacher_mobile_number": "",
                    "teacher_email": null,
                    "school_id": "1",
                    "lecture_id": "7",
                    "timeslots_count": "1",
                    "semester_id": "1",
                    "teacher_full_name": "Abody Kashgary"
                }
            },
            {
                "TeacherTimeslotsView": {
                    "id": "2",
                    "number": "999125347199",
                    "ID_Num": null,
                    "teacher_id": "2",
                    "teacher_user_id": "6",
                    "teacher_full_name_ara": "بيتر جان",
                    "status_id": "1",
                    "teacher_date_of_birth": "2017-07-03",
                    "teacher_place_of_birth": "",
                    "teacher_address": "",
                    "teacher_phone_number": "",
                    "teacher_mobile_number": "",
                    "teacher_email": null,
                    "school_id": "1",
                    "lecture_id": "3",
                    "timeslots_count": "3",
                    "semester_id": "1",
                    "teacher_full_name": "بيتر جان"
                }
            }
        ]
        

## Communication Statistics [/supervisors/communication_statistics/?access_token=your_access_token&user_id=100]

+ Parameters :
    + user_id: 100 (required, intger) - user ID of the supervisor
    + from : 2017-1-1 (date) - YYYY-MM-DD
    + to : 2017-1-2 (date - YYYY-MM-DD
    
## Communication Statistics [GET]

+ user_id: (int)
+ from : (date, Format: YYYY-MM-DD)
+ to : (date, Format: YYYY-MM-DD)

+ Response 200 (application/json)

        {"teachers":[{"UserTeacherView":{"id":"2","number":"999125347199","ID_Num":null,"teacher_id":"2","teacher_user_id":"6","teacher_full_name":"Peter Jan","teacher_full_name_ara":"\u0628\u064a\u062a\u0631 \u062c\u0627\u0646","status_id":"1","status_title":"Active","teacher_date_of_birth":"2017-07-03","teacher_place_of_birth":"","teacher_address":"","teacher_phone_number":"","teacher_mobile_number":"","teacher_email":null,"school_id":"1","teacher_nationality_id":"1","last_activity_date":"2017-07-12 09:13:52"}},{"UserTeacherView":{"id":"3","number":"9997777799","ID_Num":"1234567890","teacher_id":"3","teacher_user_id":"41","teacher_full_name":"A NAME","teacher_full_name_ara":"","status_id":"1","status_title":"Active","teacher_date_of_birth":"2017-07-18","teacher_place_of_birth":"","teacher_address":"","teacher_phone_number":"","teacher_mobile_number":"","teacher_email":null,"school_id":"1","teacher_nationality_id":"1","last_activity_date":"2017-07-18 14:22:09"}}],"stats":{"2":{"VCR":{"count":0,"date":null},"Rooms":{"count":1,"date":null},"Posts":{"count":1,"date":null},"Messages":{"count":1,"date":null}},"3":{"VCR":{"count":0,"date":null},"Rooms":{"count":0,"date":null},"Posts":{"count":0,"date":null},"Messages":{"count":0,"date":null}}}}
        
## Group Dashboard
Resources related to dashboard.

## get total absences  [/dashboards/get_dashboard_total_absences?school_id=1&user_id=31&access_token=your_access_token]

+ Parameters :
    + user_id: user_id(required, intger) 
    + school_id: school_id(optional, email) if none has been filled then the function will search for the whole gruop based on the user id

### Rate Tim presentation [GET]
This action will list the full day absences for a school or group of schools
during the week .

+ user_id (int)
+ school_id(int)


+ Response 200 (application/json)
    
                {
            "day0": 0,
            "day1": 0,
            "day2": 0,
            "day3": 0,
            "day4": 0,
            "day5": 0,
            "day6": 0
        }


## Group Rating
Resources related to rating system in the API.

## Rate Tim presentation  [/rates/rate_tim_presentation?access_token=your_access_token]

+ Parameters :
    + rating_value: 4 (required, intger) - range from (1 to 5)
    + email: adam@gmail.com (optional, email) - your email

### Rate Tim presentation [POST]
This action allows to rate temraz API presentation.

+ rating_value (int)
+ email (varchar)


+ Response 200 (application/json)
    
        {"status":"success","message":"Your rate has been saved"}
        
# Group RealtimeFeed
Resources related to Realtime feed.

## Get Activites [/Users/activities_in_a_single_second?access_token=your_access_token]
This action allows you to add a student behavior to classera system from your website.

### Get Activites [GET]

+ school_id (int, required) - Target school id.
+ minute (int) - number of minutes to check, last minute if left empty.

+ Response 200 (application/json)
    
        {"activities_per_minute":[],
            "activities_in_a_single_minute":[
            {"0":{"visits":"1"}, "Online":{"time":"2017-07-26 11:59:19"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 11:59:58"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 12:00:56"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 12:01:05"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 12:01:08"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 12:01:14"}}
            ,{"0":{"visits":"3"},"Online":{"time":"2017-07-26 12:01:19"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 12:01:26"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 12:04:26"}}
            ,{"0":{"visits":"1"},"Online":{"time":"2017-07-26 12:07:41"}}
            ]
        }
            
## Get Visits by Role [/Users/visits_by_role?access_token=your_access_token]
This action returns current visits based on roles.
### Visits by role [GET]
+ school_id (int, required) - Target school id.

+ Response 200 (application/json)

        {"Students":0,"Teachers":0,"Parents":0,"Supervisors":0,"KaganCoaches":0,"Advisers":0,"Managers":0,"Admins":1}
    
## Get SMS Usage [/Users/get_sms_usage?access_token=your_access_token]
This action returns current SMS usage.
### Get SMS Usage [GET]
+ school_id (int, required) - Target school id.

+ Response 200 (application/json)

        {"total":NUM,"remaining":NUM}
        
## Get SMS Report [/ShortMessages/get_sms_report?access_token=your_access_token]
This action returns SMS report. data depends on role id.
### Get SMS Report [GET]
+ user_id (int, required) - Manager's, Admin's, Teacher Supervisor's or Adviser's User id.

+ response 200 (application/json)

        [
            {
                "SmsReportView": {
                    "id": "NUM",
                    "message_id": NUM,
                    "body": "BODY",
                    "sender": "SENDER_NAME",
                    "receiver": "RECIEVER_NAME",
                    "mobile": "MOBILE_NUM",
                    "number_of_units": "NUM",
                    "type": "TYPE",
                    "status": "STATUS",
                    "created": "DATE"
                }
            }
        ]
        
# Group ShortMessages
## Send SMS to IDs [/Shortmessages/send_sms_to_ids?access_token=your_access_token]
This action allows a valid and authorized user to send SMS messages based on target user ids.

### Send SMS to IDs [POST]

+ sender_user_id (int, required) - Sender User id.
+ recipients_user_ids (int, required) - target user ids, seperated by ','.
+ message_body (String, required) - Text to send.
+ type (int) - type of SMS message, default is 0.

+ Response 200 (application/json)
    
        {'STATUS': 'Incomplete',
        'SMS':{
            'id': 'Sent SMS',
            'id': 'Invalid Number',
            'id': 'Invalid User'
            }
        }
## Send SMS to Numbers [/Shortmessages/send_sms_to_numbers?access_token=your_access_token]
This action allows a user to send SMS messages based on target user numbers.

### Send SMS to Numbers [POST]

+ sender_user_id (int, required) - Sender User id.
+ recipients_user_numbers (int, required) - target numbers, seperated by ','.
+ message_body (String, required) - Text to send.
+ type (int) - type of SMS message, default is 0.

+ Response 200 (application/json)
    
        {'STATUS': 'Incomplete',
        'SMS':{
            'NUMBER': 'Sent SMS',
            'NUMBER': 'Invalid Number'
            }
        }